<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
  $Id: build.xml,v 1.769 2009/05/25 05:48:16 geir.gronmo Exp $

  Note to new users: call 'ant bootstrap' to initialize your build
                     system after you've checked out the source
                     code for the first time.

  Main targets:

    dist.jar.ontopia - builds the ontopia.jar file
    dist.ontopia - builds the full ontopia distribution

  If you'd like to do the compile targets manually execute them in this order:

    ant init clean.classes compile.ontopia jar.ontopia compile.ontopia.test jar.ontopia.test

-->

<project name="ontopia" default="bootstrap" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <target name="init" depends="init.init" unless="init.done">

  </target>

  <target name="init.init">
    <!-- Create time stamp -->
    <tstamp>
      <format property="build.date" pattern="yyyy-MM-dd 'at' HH:mm:ss z" />
    </tstamp>

    <!-- Get user specific properties -->
    <property file="build.properties" />
    
    <!-- Set project properties -->
    <property name="project.root" value="${basedir}" />
    <property name="src.path" value="${project.root}/src" />
    <property name="test.path" value="${project.root}/src/test-data" />
    <property name="java.path" value="${src.path}/java" />
    <property name="doc.path" value="${project.root}/doc" />
    <property name="topicmaps.path" value="${project.root}/topicmaps" />
    <property name="3rdparty.path" value="${project.root}/3rdparty" />
    <property name="webapps.path" value="${project.root}/src/webapps" />
    <property name="lib.path" value="${project.root}/lib" />

    <!-- User information -->
    <property name="build.user" value="${user.name}" />

    <!-- Compiler properties -->
    <property name="build.compiler" value="modern" />
    <property name="optimize" value="false" />
    <property name="deprecation" value="off" />
    <property name="debug" value="true" />
    <property name="debuglevel" value="source,lines,vars" />

    <!-- Build directories -->
    <property name="build.root" value="${project.root}/build" />
    <property name="build.dists" value="${build.root}/dists" />
    <property name="build.classes" value="${build.root}/classes" />
    <property name="build.jars" value="${build.root}/jars" />
    <property name="build.javadoc" value="${build.root}/javadoc" />
    <property name="build.tmp" value="${build.root}/tmp" />

    <!-- Distribution properties -->
    <property name="dist.title" value="Ontopia" />
    <property name="dist.name" value="ontopia" />

    <tstamp>
      <format property="dist.date" pattern="yyyyMMdd" />
    </tstamp>
    <tstamp>
      <format property="dist.date.full" pattern="yyyy-MM-dd" />
    </tstamp>

    <property name="dist.version.major" value="5" />
    <property name="dist.version.minor" value="1" />
    <property name="dist.version.micro" value="0" />

    <property name="dist.version.beta" value="" />
    <!-- "b1" if beta 1, empty if not beta -->

    <property name="dist.version" value="${dist.version.major}.${dist.version.minor}.${dist.version.micro}${dist.version.beta}" />

    <property name="dist.dir" value="${dist.name}-${dist.version}" />
    <property name="dist.zipfile" value="${dist.name}-${dist.version}-${dist.date}.zip" />

    <property name="dist.path" value="${build.root}/dists/${dist.dir}" />

    <ivy:settings id="ivy.instance" file="${basedir}/ivysettings.xml" />
    <ivy:resolve />
    <ivy:retrieve organisation="net.ontopia" module="ontopia-engine" conf="build" />

    <ivy:cachepath pathid="project.classpath.ivy" organisation="net.ontopia" module="ontopia-engine" conf="build" />

    <path id="project.classpath.nolog4j">
      <pathelement location="${basedir}/3rdparty/ontoboot.jar" />
      <pathelement location="${basedir}/3rdparty/jing.jar" />
      <pathelement location="${basedir}/3rdparty/touchgraph.jar" />
      <pathelement location="${basedir}/3rdparty/trove.jar" />
      <path refid="project.classpath.ivy" />
    </path>

    <path id="project.classpath">
      <path refid="project.classpath.nolog4j" />
      <!--pathelement location="${3rdparty.path}/log4j.jar" /-->
      <pathelement location="${basedir}/build/classes" />
    </path>

    <path id="project.classpath.test">
      <path refid="project.classpath" />
      <pathelement location="${basedir}/build/classes" />
    </path>

    <taskdef classname="JFlex.anttask.JFlexTask" name="jflex">
      <classpath refid="project.classpath" />
    </taskdef>

    <taskdef name="texen" classname="net.ontopia.ant.TemplateTexenTask">
      <!-- WARNING: velocity will define its template directory just
      once, so when calling the texen task multiple times only the first
      template directory is used. for that reason we're using build.tmp
      as the template directory. -->
      <classpath refid="project.classpath" />
    </taskdef>

    <property name="init.done" value="true" />

    <!-- svn-revision to the external xtm2 test suite -->
    <property name="xtm2.revision" value="32" />
    <!-- svn-revision to the external xtm21 test suite -->
    <property name="xtm21.revision" value="88" />
    <!-- svn-revision to the external tm/xml test suite -->
    <property name="tmxml.revision" value="68" />
    <!-- svn-revision to the external jtm test suite -->
    <property name="jtm.revision" value="46" />
    <!-- svn-revision to the external ctm test suite -->
    <property name="ctm.revision" value="85" />
  </target>

  <!-- ======================================================================
       Bootstrap
       ====================================================================== -->

  <target name="jar.ontoboot" depends="init">
    <echo>Creating engine runtime jar file...</echo>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath"
            includeantruntime="false">
      <patternset>
        <include name="net/ontopia/ant/TestTask.java" />
        <include name="net/ontopia/ant/TemplateTexenTask.java" />
      </patternset>
    </javac>
    <delete file="${3rdparty.path}/ontoboot.jar" />
    <jar basedir="${build.classes}" jarfile="${3rdparty.path}/ontoboot.jar">
      <patternset>
        <include name="net/ontopia/ant/TestTask.class" />
        <include name="net/ontopia/ant/TemplateTexenTask.class" />
      </patternset>
    </jar>
  </target>
  
  <!-- ======================================================================
        Build cleanup
       ====================================================================== -->

  <target name="clean.build" depends="init">
    <delete dir="${build.root}" />
    <mkdir dir="${build.root}" />
    <mkdir dir="${build.dists}" />
    <mkdir dir="${build.classes}" />
    <mkdir dir="${build.jars}" />
  </target>
  
  <target name="bootstrap" depends="init">
    <!-- This target prepares build system. The target should be called when
         checking out the source code to a new system -->

    <!-- Create directories -->
    <mkdir dir="${build.root}" />
    <mkdir dir="${build.dists}" />
    <mkdir dir="${build.classes}" />
    <mkdir dir="${build.jars}" />
    <mkdir dir="${build.tmp}" />
    
    <!-- Prepare product classes -->
    <antcall inheritRefs="true" target="prepare.product.class" />
  </target>
        
  <target name="clean.classes">
    <echo>Cleaning all compiled classes...</echo>
    <delete>
      <fileset dir="${build.classes}">
        <include name="**/*.class" />
      </fileset>
    </delete>
  </target>
  
  <!-- ======================================================================
        Engine classes
       ====================================================================== -->

  <!-- Patterns -->
  <patternset id="sources.engine">
    <include name="net/ontopia/Ontopia.java" />
    <include name="net/ontopia/product/*.java" />
    <include name="net/ontopia/net/*.java" />
    <include name="net/ontopia/net/data/*.java" />
    <include name="net/ontopia/utils/*.java" />
    <include name="net/ontopia/xml/*.java" />
    <include name="net/ontopia/infoset/core/*.java" />
    <include name="net/ontopia/infoset/utils/*.java" />
    <include name="net/ontopia/infoset/impl/basic/*.java" />
    <include name="net/ontopia/topicmaps/core/*.java" />
    <include name="net/ontopia/topicmaps/core/index/*.java" />
    <include name="net/ontopia/topicmaps/core/events/*.java" />
    <include name="net/ontopia/topicmaps/entry/*.java" />
    <include name="net/ontopia/topicmaps/helpers/*.java" />
    <include name="net/ontopia/topicmaps/utils/*.java" />
    <include name="net/ontopia/topicmaps/utils/ltm/*.java" />
    <include name="net/ontopia/topicmaps/utils/ctm/*.java" />
    <include name="net/ontopia/topicmaps/utils/jtm/*.java" />
    <include name="net/ontopia/topicmaps/utils/rdf/*.java" />
    <include name="net/ontopia/topicmaps/utils/xfml/*.java" />
    <include name="net/ontopia/topicmaps/utils/tmrap/*.java" />
    <include name="net/ontopia/topicmaps/impl/utils/*.java" />
    <include name="net/ontopia/topicmaps/impl/basic/*.java" />
    <include name="net/ontopia/topicmaps/impl/remote/*.java" />
    <include name="net/ontopia/topicmaps/impl/basic/index/*.java" />
    <include name="net/ontopia/topicmaps/xml/*.java" />
    <include name="net/ontopia/topicmaps/cmdlineutils/**/*.java" />
    <exclude name="net/ontopia/topicmaps/cmdlineutils/test/*.java" />
  </patternset>
  
  <patternset id="classes.engine">
    <include name="net/ontopia/Ontopia.class" />
    <include name="net/ontopia/product/*.class" />
    <include name="net/ontopia/net/*.class" />
    <include name="net/ontopia/net/data/*.class" />
    <include name="net/ontopia/utils/*.class" />
    <include name="net/ontopia/xml/*.class" />
    <include name="net/ontopia/infoset/core/*.class" />
    <include name="net/ontopia/infoset/utils/*.class" />
    <include name="net/ontopia/infoset/impl/basic/*.class" />
    <include name="net/ontopia/topicmaps/core/*.class" />
    <include name="net/ontopia/topicmaps/core/index/*.class" />
    <include name="net/ontopia/topicmaps/core/events/*.class" />
    <include name="net/ontopia/topicmaps/entry/*.class" />
    <include name="net/ontopia/topicmaps/helpers/*.class" />
    <include name="net/ontopia/topicmaps/utils/*.class" />
    <include name="net/ontopia/topicmaps/utils/ltm/*.class" />
    <include name="net/ontopia/topicmaps/utils/ctm/*.class" />
    <include name="net/ontopia/topicmaps/utils/jtm/*.class" />
    <include name="net/ontopia/topicmaps/utils/rdf/*.class" />
    <include name="net/ontopia/topicmaps/utils/xfml/*.class" />
    <include name="net/ontopia/topicmaps/utils/tmrap/*.class" />
    <include name="net/ontopia/topicmaps/impl/utils/*.class" />
    <include name="net/ontopia/topicmaps/impl/basic/*.class" />
    <include name="net/ontopia/topicmaps/impl/basic/index/*.class" />
    <include name="net/ontopia/topicmaps/xml/*.class" />
    <include name="net/ontopia/topicmaps/xml/tmxml.rnc" />
    <include name="net/ontopia/topicmaps/impl/remote/*.class" />
    <include name="net/ontopia/topicmaps/cmdlineutils/**/*.class" />
    <exclude name="net/ontopia/topicmaps/cmdlineutils/test/*.class" />
  </patternset>
  
  <patternset id="sources.test.engine">
    <include name="net/ontopia/test/*.java" />
    <include name="net/ontopia/net/data/test/*.java" />
    <include name="net/ontopia/test/threads/*.java" />
    <include name="net/ontopia/test/threads/action/*.java" />
    <include name="net/ontopia/test/threads/target/*.java" />
    <include name="net/ontopia/utils/test/*.java" />
    <include name="net/ontopia/xml/test/*.java" />
    <include name="net/ontopia/infoset/impl/basic/test/*.java" />
    <include name="net/ontopia/topicmaps/test/AbstractTopicMapTestCase.java" />
    <include name="net/ontopia/topicmaps/core/test/*.java" />
    <include name="net/ontopia/topicmaps/core/index/test/*.java" />
    <include name="net/ontopia/topicmaps/core/events/test/*.java" />
    <include name="net/ontopia/topicmaps/entry/test/*.java" />
    <include name="net/ontopia/topicmaps/xml/test/*.java" />
    <include name="net/ontopia/topicmaps/impl/basic/test/*.java" />
    <include name="net/ontopia/topicmaps/impl/basic/index/test/*.java" />
    <include name="net/ontopia/topicmaps/impl/utils/test/*.java" />
    <include name="net/ontopia/topicmaps/utils/test/*.java" />
    <include name="net/ontopia/topicmaps/utils/rdf/test/*.java" />
    <include name="net/ontopia/topicmaps/utils/ltm/test/*.java" />
    <include name="net/ontopia/topicmaps/utils/ctm/test/*.java" />
    <include name="net/ontopia/topicmaps/utils/jtm/test/*.java" />
    <include name="net/ontopia/topicmaps/utils/tmrap/test/**/*.java" />
    <include name="net/ontopia/topicmaps/cmdlineutils/test/*.java" />
    <include name="net/ontopia/test/perf/*.java" />
    <include name="net/ontopia/net/data/test/*.java" />
  </patternset>
  
  <patternset id="classes.test.engine">
    <include name="net/ontopia/test/*.class" />
    <include name="net/ontopia/net/data/test/*.class" />
    <include name="net/ontopia/test/threads/*.class" />
    <include name="net/ontopia/test/threads/action/*.class" />
    <include name="net/ontopia/test/threads/target/*.class" />
    <include name="net/ontopia/utils/test/*.class" />
    <include name="net/ontopia/xml/test/*.class" />
    <include name="net/ontopia/infoset/impl/basic/test/*.class" />
    <include name="net/ontopia/topicmaps/test/AbstractTopicMapTestCase.class" />
    <include name="net/ontopia/topicmaps/core/test/*.class" />
    <include name="net/ontopia/topicmaps/core/index/test/*.class" />
    <include name="net/ontopia/topicmaps/core/events/test/*.class" />
    <include name="net/ontopia/topicmaps/entry/test/*.class" />
    <include name="net/ontopia/topicmaps/xml/test/*.class" />
    <include name="net/ontopia/topicmaps/impl/basic/test/*.class" />
    <include name="net/ontopia/topicmaps/impl/basic/index/test/*.class" />
    <include name="net/ontopia/topicmaps/impl/utils/test/*.class" />
    <include name="net/ontopia/topicmaps/utils/test/*.class" />
    <include name="net/ontopia/topicmaps/utils/ltm/test/*.class" />
    <include name="net/ontopia/topicmaps/utils/ctm/test/*.class" />
    <include name="net/ontopia/topicmaps/utils/jtm/test/*.class" />
    <include name="net/ontopia/topicmaps/utils/rdf/test/*.class" />
    <include name="net/ontopia/topicmaps/utils/tmrap/test/**/*.class" />
    <include name="net/ontopia/topicmaps/cmdlineutils/test/*.class" />
    <include name="net/ontopia/test/perf/*.class" />
    <include name="net/ontopia/net/data/test/*.class" />
  </patternset>
  
  <!-- ======================================================================
       RDBMS (proxy)
       ====================================================================== -->
  
  <patternset id="sources.rdbms">
    <include name="net/ontopia/persistence/proxy/*.java" />
    <include name="net/ontopia/persistence/query/sql/*.java" />
    <include name="net/ontopia/persistence/query/jdo/*.java" />
    <include name="net/ontopia/persistence/rdbms/*.java" />
    <include name="net/ontopia/persistence/jdbcspy/*.java" />
    <include name="net/ontopia/topicmaps/impl/rdbms/*.java" />
    <include name="net/ontopia/topicmaps/impl/rdbms/index/*.java" />
    <include name="net/ontopia/topicmaps/cmdlineutils/rdbms/*.java" />
  </patternset>
  
  <patternset id="classes.rdbms">
    <include name="net/ontopia/persistence/proxy/*.class" />
    <include name="net/ontopia/persistence/query/sql/*.class" />
    <include name="net/ontopia/persistence/query/jdo/*.class" />
    <include name="net/ontopia/persistence/rdbms/*.class" />
    <include name="net/ontopia/persistence/jdbcspy/*.class" />
    <include name="net/ontopia/topicmaps/impl/rdbms/*.class" />
    <include name="net/ontopia/topicmaps/impl/rdbms/index/*.class" />
    <include name="net/ontopia/topicmaps/cmdlineutils/rdbms/*.class" />
    <!-- configuration files -->
    <include name="net/ontopia/topicmaps/impl/rdbms/config/mapping.xml" />
    <include name="net/ontopia/topicmaps/impl/rdbms/config/queries.xml" />
    <include name="net/ontopia/topicmaps/impl/rdbms/config/schema.xml" />
  </patternset>
  
  <property name="dist.rdbms.packagenames" value="
                                                  net.ontopia.topicmaps.impl.rdbms" />
  
  <property name="dist.rdbms.packagenames.other" value="
                                                        net.ontopia.topicmaps.core.TopicMapStoreIF,
                                                        net.ontopia.topicmaps.entry.TopicMapSourceIF" />
  
  <property name="dev.rdbms.packagenames" value="
                                                 net.ontopia.topicmaps.core,
                                                 net.ontopia.topicmaps.core.index,
                                                 net.ontopia.topicmaps.core.events,
                                                 net.ontopia.topicmaps.impl.utils,
                                                 net.ontopia.infoset.core,
                                                 net.ontopia.persistence.proxy,
                                                 net.ontopia.persistence.rdbms,
                                                 net.ontopia.persistence.query.jdo,
                                                 net.ontopia.persistence.query.sql,
                                                 net.ontopia.topicmaps.impl.rdbms,
                                                 net.ontopia.topicmaps.impl.rdbms.index" />
  
  <patternset id="sources.test.rdbms">
    <include name="net/ontopia/persistence/proxy/test/*.java" />
    <include name="net/ontopia/topicmaps/impl/rdbms/test/*.java" />
  </patternset>
  
  <patternset id="classes.test.rdbms">
    <include name="net/ontopia/persistence/proxy/test/*.class" />
    <include name="net/ontopia/topicmaps/impl/rdbms/test/*.class" />
  </patternset>
  
  <target name="generate-rdbms-schema">
    <java classname="net.ontopia.persistence.rdbms.DDLWriter" fork="true" classpathref="project.classpath">
      <arg value="${src.path}/dist/rdbms/rdbms-schema.xml" />
      <arg value="${database}" />
      <arg value="${platforms}" />
      <arg value="${dist.path}/rdbms/setup/${id}.create.sql" />
      <arg value="${dist.path}/rdbms/setup/${id}.drop.sql" />
    </java>
  </target>
  
  <!-- ======================================================================
       TMAPI support
       ==================================================================== -->
  
  <patternset id="sources.tmapi">
    <include name="net/ontopia/topicmaps/impl/tmapi2/**/*.java" />
    <exclude name="net/ontopia/topicmaps/impl/tmapi2/test/**/*.java" />
  </patternset>
  
  <patternset id="classes.tmapi">
    <include name="net/ontopia/topicmaps/impl/tmapi2/**/*.class" />
    <exclude name="net/ontopia/topicmaps/impl/tmapi2/test/**/*.class" />
    <include name="META-INF/services/org.tmapi.core.TopicMapSystemFactory" />
  </patternset>
  
  <patternset id="sources.test.tmapi">
    <include name="net/ontopia/topicmaps/impl/tmapi2/test/**/*.java" />
  </patternset>
  
  <patternset id="classes.test.tmapi">
    <include name="net/ontopia/topicmaps/impl/tmapi2/test/**/*.class" />
  </patternset>
  
  <!-- ======================================================================
       Fulltext search engine integration
       ====================================================================== -->
  
  <patternset id="sources.fulltext">
    <include name="net/ontopia/infoset/fulltext/core/*.java" />
    <include name="net/ontopia/infoset/fulltext/impl/lucene/*.java" />
    <include name="net/ontopia/infoset/fulltext/impl/rdbms/*.java" />
    <include name="net/ontopia/infoset/fulltext/topicmaps/*.java" />
    <include name="net/ontopia/infoset/fulltext/topicmaps/nav/plugins/*.java" />
    <include name="net/ontopia/infoset/fulltext/utils/*.java" />
  </patternset>
  
  <patternset id="classes.fulltext">
    <include name="net/ontopia/infoset/fulltext/core/*.class" />
    <include name="net/ontopia/infoset/fulltext/impl/lucene/*.class" />
    <include name="net/ontopia/infoset/fulltext/impl/rdbms/*.class" />
    <include name="net/ontopia/infoset/fulltext/topicmaps/*.class" />
    <include name="net/ontopia/infoset/fulltext/topicmaps/nav/plugins/*.class" />
    <include name="net/ontopia/infoset/fulltext/utils/*.class" />
  </patternset>
  
  <patternset id="sources.test.fulltext">
    <include name="net/ontopia/infoset/fulltext/impl/lucene/test/*.java" />
    <include name="net/ontopia/infoset/fulltext/topicmaps/test/*.java" />
  </patternset>
  
  <patternset id="classes.test.fulltext">
    <include name="net/ontopia/infoset/fulltext/impl/lucene/test/*.class" />
    <include name="net/ontopia/infoset/fulltext/topicmaps/test/*.class" />
  </patternset>
  
  <property name="dist.fulltext.packagenames" value="
                                                     net.ontopia.infoset.fulltext.core,
                                                     net.ontopia.infoset.fulltext.impl.lucene,
                                                     net.ontopia.infoset.fulltext.impl.rdbms" />
  
  <property name="dist.fulltext.packagenames.other" value="
                                                           net.ontopia.infoset.core,
                                                           net.ontopia.infoset.impl.basic" />
  
  <property name="dev.fulltext.packagenames" value="
                                                    net.ontopia.infoset.fulltext.utils,
                                                    ${dist.fulltext.packagenames},
                                                    ${dist.fulltext.packagenames.other}" />
  
  <!-- ======================================================================
       Query engine
       ==================================================================== -->
  
  <!-- Patterns -->
  <patternset id="sources.query">
    <include name="net/ontopia/topicmaps/query/core/*.java" />
    <include name="net/ontopia/topicmaps/query/parser/*.java" />
    <include name="net/ontopia/topicmaps/query/utils/*.java" />
    <include name="net/ontopia/topicmaps/query/impl/utils/*.java" />
    <include name="net/ontopia/topicmaps/query/impl/basic/*.java" />
    <include name="net/ontopia/topicmaps/query/impl/rdbms/*.java" />
    <include name="net/ontopia/topicmaps/query/spi/*.java" />
  </patternset>
  
  <patternset id="classes.query">
    <include name="net/ontopia/topicmaps/query/core/*.class" />
    <include name="net/ontopia/topicmaps/query/parser/*.class" />
    <include name="net/ontopia/topicmaps/query/utils/*.class" />
    <include name="net/ontopia/topicmaps/query/impl/utils/*.class" />
    <include name="net/ontopia/topicmaps/query/impl/basic/*.class" />
    <include name="net/ontopia/topicmaps/query/impl/rdbms/*.class" />
    <include name="net/ontopia/topicmaps/query/spi/*.class" />
    <include name="META-INF/services/net.ontopia.topicmaps.query.core.QueryProcessorFactoryIF" />
  </patternset>
  
  <patternset id="sources.test.query">
    <include name="net/ontopia/topicmaps/query/**/test/*.java" />
  </patternset>
  
  <patternset id="classes.test.query">
    <include name="net/ontopia/topicmaps/query/**/test/*.class" />
  </patternset>
  
  <property name="dist.query.packagenames" value="
                                                  net.ontopia.topicmaps.query.core,
                                                  net.ontopia.topicmaps.query.utils,
                                                  net.ontopia.topicmaps.query.spi" />
  
  <property name="dev.query.packagenames" value="
                                                 ${dist.query.packagenames},
                                                 net.ontopia.topicmaps.query.parser,
                                                 net.ontopia.topicmaps.query.impl.basic,
                                                 net.ontopia.topicmaps.query.impl.rdbms,
                                                 net.ontopia.topicmaps.query.impl.utils,
                                                 net.ontopia.topicmaps.query.spi" />
  
  <!-- ======================================================================
       Schema tools
       ==================================================================== -->
  
  <patternset id="sources.schema">
    <include name="net/ontopia/topicmaps/schema/**/*.java" />
    <exclude name="net/ontopia/topicmaps/schema/**/test/*.java" />
  </patternset>
  
  <patternset id="classes.schema">
    <include name="net/ontopia/topicmaps/schema/**/*.class" />
    <exclude name="net/ontopia/topicmaps/schema/**/test/*.class" />
  </patternset>
  
  <patternset id="sources.test.schema">
    <include name="net/ontopia/topicmaps/schema/**/test/*.java" />
  </patternset>
  
  <patternset id="classes.test.schema">
    <include name="net/ontopia/topicmaps/schema/**/test/*.class" />
  </patternset>
  
  <property name="dist.schema.packagenames" value="
                                                   net.ontopia.topicmaps.schema.core,
                                                   net.ontopia.topicmaps.schema.impl.osl,
                                                   net.ontopia.topicmaps.schema.utils" />
  
  <property name="dev.schema.packagenames" value="
                                                  ${dist.schema.packagenames}" />
  
  <!-- ======================================================================
       DB2TM
       ====================================================================== -->
  
  <patternset id="sources.db2tm">
    <include name="net/ontopia/topicmaps/db2tm/*.java" />
  </patternset>
  
  <patternset id="classes.db2tm">
    <include name="net/ontopia/topicmaps/db2tm/*.class" />
    <include name="net/ontopia/topicmaps/db2tm/db2tm.rnc" />
  </patternset>
  
  <patternset id="sources.test.db2tm">
    <include name="net/ontopia/topicmaps/db2tm/test/**/*.java" />
  </patternset>
  
  <patternset id="classes.test.db2tm">
    <include name="net/ontopia/topicmaps/db2tm/test/**/*.class" />
  </patternset>
  
  <property name="dist.db2tm.packagenames" value="
                                                  net.ontopia.topicmaps.db2tm" />
  
  <property name="dev.db2tm.packagenames" value="
                                                 net.ontopia.topicmaps.db2tm" />
  
  <!-- ======================================================================
       Vizigator
       ==================================================================== -->
  
  <patternset id="sources.viz">
    <include name="net/ontopia/topicmaps/viz/*.java" />
  </patternset>
  
  <patternset id="classes.viz">
    <include name="net/ontopia/topicmaps/viz/*.class" />
  </patternset>
  
  <patternset id="sources.test.viz">
    <include name="net/ontopia/topicmaps/viz/test/*.java" />
  </patternset>
  
  <patternset id="classes.test.viz">
    <include name="net/ontopia/topicmaps/viz/test/*.class" />
  </patternset>
  
  <patternset id="classes.vizlet">
    <patternset refid="classes.viz" />
  </patternset>
  
  <patternset id="classes.vizdesktop">
    <patternset refid="classes.viz" />
  </patternset>
  
  <patternset id="images.viz">
    <include name="net/ontopia/topicmaps/viz/logo.gif" />
  </patternset>
  
  <patternset id="resources.viz">
    <include name="net/ontopia/topicmaps/viz/messages.properties" />
    <include name="net/ontopia/topicmaps/viz/messages_*.properties" />
  </patternset>
  
  <target name="jar.vizlet" depends="compile.dummyLoggers">
    <echo>Creating vizlet jar file...</echo>
    
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath.nolog4j" source="1.5"
            includeantruntime="false">
      <patternset refid="sources.viz" />
    </javac>
    <echo>Compiling viz classes...</echo>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath.nolog4j"
            includeantruntime="false">
      <patternset refid="sources.viz" />
    </javac>
    <echo>Copying vizigator resources ... </echo>
    <copy file="${java.path}/net/ontopia/topicmaps/viz/logo.gif" tofile="${build.classes}/net/ontopia/topicmaps/viz/logo.gif" />
    <!-- base nls support for Vizigator -->
    <copy todir="${build.classes}/net/ontopia/topicmaps/viz/" overwrite="yes">
      <fileset dir="${java.path}/net/ontopia/topicmaps/viz/">
        <patternset>
          <include name="messages.properties" />
          <include name="messages_*.properties" />
        </patternset>
      </fileset>
    </copy>
    
    <unjar src="${3rdparty.path}/crimson.jar" dest="${build.tmp}" />
    <unjar src="${3rdparty.path}/touchgraph.jar" dest="${build.tmp}" />
    
    <unjar dest="${build.tmp}">
      <fileset file="${lib.path}/backport-util-concurrent-*.jar" />
    </unjar>
    <delete dir="${build.tmp}/edu/emory/mathcs/backport/java/util/concurrent" />
    <delete includeemptydirs="true">
      <fileset dir="${build.tmp}/edu/emory/mathcs/backport/java/util">
        <include name="concurrent/**" />
        <include name="Array*" />
        <include name="Deque*" />
        <include name="Linked*" />
        <include name="Priority*" />
        <include name="Queue*" />
      </fileset>
    </delete>
    
    <delete file="${build.jars}/ontopia-vizlet.jar" />
    <delete file="${build.jars}/signed-vizlet.jar" />
    
    <mkdir dir="${build.classes}/META-INF/services" />
    <copy file="${src.path}/dist/vizigator/services/com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration" todir="${build.classes}/META-INF/services" />
    
    <jar basedir="${build.classes}" jarfile="${build.jars}/ontopia-vizlet.jar">
      <patternset includes="META-INF/services/com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration" />
      <patternset refid="classes.vizlet" />
      <patternset refid="resources.viz" />
      <patternset>
        <patternset refid="classes.engine" />
        <exclude name="net/ontopia/topicmaps/entry/*.class" />
        <exclude name="net/ontopia/topicmaps/utils/ltm/*.class" />
        <exclude name="net/ontopia/topicmaps/utils/rdf/*.class" />
        <exclude name="net/ontopia/topicmaps/utils/xfml/*.class" />
        <exclude name="net/ontopia/topicmaps/xml/ISO13250*.class" />
        <exclude name="net/ontopia/topicmaps/xml/XTMExporter.class" />
        <exclude name="net/ontopia/topicmaps/xml/XTMTopicMapWriter.class" />
        <exclude name="net/ontopia/topicmaps/xml/XTMFragmentExporter*.class" />
        <exclude name="net/ontopia/topicmaps/xml/*Canonical*.class" />
        <exclude name="net/ontopia/topicmaps/xml/XTMPathTopicMapSource*.class" />
        <exclude name="net/ontopia/topicmaps/xml/XTMValidationHandler*.class" />
        <!-- NOTE: some navigator classes are needed too -->
        <include name="net/ontopia/topicmaps/nav/utils/comparators/TopicComparator.class" />
        <include name="net/ontopia/topicmaps/nav/utils/comparators/ContextNameGrabber.class" />
        <include name="net/ontopia/topicmaps/nav/utils/stringifiers/ComparatorNameStringifier.class" />
      </patternset>
      <patternset refid="classes.dummyLoggers" />
      <fileset dir="${build.tmp}">
        <include name="**/*.class" />
      </fileset>
    </jar>
    
    <!-- create signed jar-file -->
    <echo>Signing vizlet jar-file...</echo>
    <exec executable="jarsigner">
      <arg value="-keystore" />
      <arg value="${src.path}/dist/signing/ontopiastore" />
      <arg value="-storepass" />
      <arg value="ontopia" />
      <arg value="-keypass" />
      <arg value="ontopia" />
      <arg value="-signedjar" />
      <arg value="${build.jars}/signed-vizlet.jar" />
      <arg value="${build.jars}/ontopia-vizlet.jar" />
      <arg value="ontopia" />
    </exec>
    
  </target>
  
  <!-- ======================================================================
       Classify (chew)
       ====================================================================== -->
  
  <patternset id="sources.classify">
    <include name="net/ontopia/topicmaps/classify/*.java" />
  </patternset>
  
  <patternset id="classes.classify">
    <include name="net/ontopia/topicmaps/classify/*.class" />
    <include name="net/ontopia/topicmaps/classify/lang/*" />
  </patternset>
  
  <patternset id="sources.test.classify">
    <include name="net/ontopia/topicmaps/classify/test/**/*.java" />
  </patternset>
  
  <patternset id="classes.test.classify">
    <include name="net/ontopia/topicmaps/classify/test/**/*.class" />
  </patternset>
  
  <property name="dist.classify.packagenames" value="net.ontopia.topicmaps.classify" />
  
  <property name="dev.classify.packagenames" value="net.ontopia.topicmaps.classify" />
  
  <!-- ======================================================================
       Unit tests
       ====================================================================== -->
  
  <target name="test" depends="init, download-xtm2, download-xtm21, download-tmxml, download-ctm, download-jtm">
    <property name="test.config" value="${test.path}/config/tests.xml" />
    <property name="test.name" value="complete-non-rdbms" />
    <echo>Using configuration file '${test.config}'.</echo>
    <echo>Tests: '${test.name}'. </echo>
    <java classname="net.ontopia.test.TestRunner" fork="true" classpathref="project.classpath.test">
      <jvmarg value="-Dnet.ontopia.xml.Slf4jSaxErrorHandler.ignoreNamespaceErrors=true" />
      <jvmarg value="-Dnet.ontopia.test.root=${test.path}" />
      <arg value="--loglevel=ERROR" />
      <arg value="${test.config}" />
      <arg value="${test.name}" />
    </java>
  </target>
  
  <!-- ======================================================================
       API documentation (docbook)
       ====================================================================== -->
  
  <target name="makehtml">
    <echo>Generating ${file}.html</echo>
    <property name="stylesheet.dir" value="${doc.path}/stylesheets/" />
    <property name="number-sects" value="true" />
    <property name="make-toc" value="true" />
    <!-- Note: param values must be empty in order to evaluate as false -->
    <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${doc.path}/stylesheets" classpathref="project.classpath">
      <arg value="-o" />
      <arg value="${file}.html" />
      
      <arg value="${file}" />
      <arg value="docbook2html.xslt" />
      
      <arg value="number-sects=${number-sects}" />
      <arg value="make-toc=${make-toc}" />
    </java>
  </target>
  
  <!-- ======================================================================
       Engine api documentation (javadoc)
       ====================================================================== -->
  
  <property name="dist.engine.packagenames" value="net.ontopia.utils,
                                                   net.ontopia.infoset.core,
                                                   net.ontopia.infoset.impl.basic,
                                                   net.ontopia.topicmaps.core,
                                                   net.ontopia.topicmaps.core.index,
                                                   net.ontopia.topicmaps.core.events,
                                                   net.ontopia.topicmaps.entry,
                                                   net.ontopia.topicmaps.utils,
                                                   net.ontopia.topicmaps.utils.ltm,
                                                   net.ontopia.topicmaps.utils.rdf,
                                                   net.ontopia.topicmaps.utils.ctm,
                                                   net.ontopia.topicmaps.utils.jtm,
                                                   net.ontopia.topicmaps.xml,
                                                   net.ontopia.topicmaps.db2tm,
                                                   net.ontopia.topicmaps.impl.basic,
                                                   net.ontopia.topicmaps.classify" />
  
  <property name="dev.engine.packagenames" value="net.ontopia.utils,
                                                  net.ontopia.xml,
                                                  net.ontopia.infoset.core,
                                                  net.ontopia.infoset.utils,
                                                  net.ontopia.infoset.impl.basic,
                                                  net.ontopia.topicmaps.core,
                                                  net.ontopia.topicmaps.core.index,
                                                  net.ontopia.topicmaps.core.events,
                                                  net.ontopia.topicmaps.entry,
                                                  net.ontopia.topicmaps.utils,
                                                  net.ontopia.topicmaps.utils.ltm,
                                                  net.ontopia.topicmaps.utils.ctm,
                                                  net.ontopia.topicmaps.utils.jtm,
                                                  net.ontopia.topicmaps.utils.rdf,
                                                  net.ontopia.topicmaps.xml,
                                                  net.ontopia.topicmaps.impl.basic,
                                                  net.ontopia.topicmaps.impl.basic.index,
                                                  net.ontopia.topicmaps.impl.utils,
                                                  net.ontopia.topicmaps.db2tm,
                                                  net.ontopia.topicmaps.classify,
                                                  net.ontopia.topicmaps.cmdlineutils" />
  
  <!-- ====================================================================
       Navigator 2nd generation: compile, jar, clean
       ==================================================================== -->
  
  <patternset id="sources.navigator">
    <include name="net/ontopia/utils/ontojsp/*.java" />
    <include name="net/ontopia/topicmaps/nav2/core/*.java" />
    <include name="net/ontopia/topicmaps/nav2/utils/*.java" />
    <include name="net/ontopia/topicmaps/nav2/impl/basic/*.java" />
    <include name="net/ontopia/topicmaps/nav2/impl/framework/*.java" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/logic/*.java" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/output/*.java" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/value/*.java" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/TMvalue/*.java" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/framework/*.java" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/tolog/*.java" />
    <include name="net/ontopia/topicmaps/nav2/plugins/*.java" />
    <include name="net/ontopia/topicmaps/nav2/servlets/*.java" />
    <include name="net/ontopia/topicmaps/nav2/appservers/**/*.java" />
    <include name="net/ontopia/topicmaps/nav2/webapps/**/*.java" />
    <include name="net/ontopia/topicmaps/nav2/realm/*.java" />
    
    <exclude name="net/ontopia/topicmaps/nav2/webapps/ontopoly/**/*.java" />
    
    <!-- Using packages from old nav framework -->
    <include name="net/ontopia/topicmaps/nav/context/*.java" />
    <include name="net/ontopia/topicmaps/nav/taglibs/template/*.java" />
    <include name="net/ontopia/topicmaps/nav/utils/comparators/*.java" />
    <include name="net/ontopia/topicmaps/nav/utils/deciders/*.java" />
    <include name="net/ontopia/topicmaps/nav/utils/stringifiers/ComparatorNameStringifier.java" />
    
    <!-- New portal toolkit packages -->
    <include name="net/ontopia/topicmaps/nav2/portlets/taglib/*.java" />
    <include name="net/ontopia/topicmaps/nav2/portlets/pojos/*.java" />
    
    <!-- Don't include test classes -->
    <exclude name="net/ontopia/topicmaps/nav2/**/test/*.java" />
  </patternset>
  
  <patternset id="classes.navigator">
    <include name="net/ontopia/utils/ontojsp/*.class" />
    <include name="net/ontopia/topicmaps/nav2/core/*.class" />
    <include name="net/ontopia/topicmaps/nav2/utils/*.class" />
    <include name="net/ontopia/topicmaps/nav2/impl/basic/*.class" />
    <include name="net/ontopia/topicmaps/nav2/impl/framework/*.class" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/logic/*.class" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/output/*.class" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/value/*.class" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/TMvalue/*.class" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/framework/*.class" />
    <include name="net/ontopia/topicmaps/nav2/taglibs/tolog/*.class" />
    <include name="net/ontopia/topicmaps/nav2/plugins/*.class" />
    <include name="net/ontopia/topicmaps/nav2/servlets/*.class" />
    <include name="net/ontopia/topicmaps/nav2/appservers/**/*.class" />
    <include name="net/ontopia/topicmaps/nav2/webapps/**/*.class" />
    <exclude name="net/ontopia/topicmaps/nav2/webapps/ontopoly/**/*.class" />
    <include name="net/ontopia/topicmaps/nav2/realm/*.class" />
    
    <!-- Using packages from old nav framework -->
    <include name="net/ontopia/topicmaps/nav/context/*.class" />
    <include name="net/ontopia/topicmaps/nav/taglibs/template/*.class" />
    <include name="net/ontopia/topicmaps/nav/utils/comparators/*.class" />
    <include name="net/ontopia/topicmaps/nav/utils/deciders/*.class" />
    <include name="net/ontopia/topicmaps/nav/utils/stringifiers/ComparatorNameStringifier.class" />
    
    <!-- New portal toolkit packages -->
    <include name="net/ontopia/topicmaps/nav2/portlets/taglib/*.class" />
    <include name="net/ontopia/topicmaps/nav2/portlets/pojos/*.class" />
    
    <!-- tld -->
    <include name="META-INF/*.tld" />
  </patternset>
  
  <!-- ====================================================================
       Navigator 2nd generation: API JavaDoc
       ==================================================================== -->
  
  <property name="dist.navigator.packagenames" value="
                                                      net.ontopia.topicmaps.nav2.utils" />
  
  <property name="dev.navigator.packagenames" value="
                                                     ${dist.navigator.packagenames},
                                                     net.ontopia.topicmaps.nav.context,
                                                     net.ontopia.topicmaps.nav.utils.stringifiers,
                                                     net.ontopia.topicmaps.nav.utils.comparators,
                                                     net.ontopia.topicmaps.nav.utils.deciders,
                                                     net.ontopia.topicmaps.nav.taglibs.template,
                                                     net.ontopia.topicmaps.nav2.core,
                                                     net.ontopia.topicmaps.nav2.impl.basic,
                                                     net.ontopia.topicmaps.nav2.taglibs.logic,
                                                     net.ontopia.topicmaps.nav2.taglibs.output,
                                                     net.ontopia.topicmaps.nav2.taglibs.value,
                                                     net.ontopia.topicmaps.nav2.taglibs.TMvalue,
                                                     net.ontopia.topicmaps.nav2.taglibs.framework,
                                                     net.ontopia.topicmaps.nav2.impl.framework,
                                                     net.ontopia.topicmaps.nav2.servlets,
                                                     net.ontopia.topicmaps.nav2.realm
                                                     " />
  
  <!-- ====================================================================
       Test-Environment for the Navigator 2nd Generation
       ==================================================================== -->
  
  <patternset id="sources.test.navigator">
    <include name="net/ontopia/utils/fakeJSP/*.java" />
    <include name="net/ontopia/topicmaps/nav2/impl/basic/test/*.java" />
    <include name="net/ontopia/topicmaps/nav2/impl/framework/test/*.java" />
    <include name="net/ontopia/topicmaps/nav2/plugins/test/*.java" />
    <include name="net/ontopia/topicmaps/nav2/utils/test/*.java" />
    <include name="net/ontopia/topicmaps/nav2/portlets/pojos/test/*.java" />
    <include name="net/ontopia/topicmaps/nav2/realm/test/*.java" />
  </patternset>
  
  <patternset id="classes.test.navigator">
    <include name="net/ontopia/utils/fakeJSP/*.class" />
    <include name="net/ontopia/topicmaps/nav2/impl/basic/test/*.class" />
    <include name="net/ontopia/topicmaps/nav2/impl/framework/test/*.class" />
    <include name="net/ontopia/topicmaps/nav2/plugins/test/*.class" />
    <include name="net/ontopia/topicmaps/nav2/utils/test/*.class" />
    <include name="net/ontopia/topicmaps/nav2/portlets/pojos/test/*.class" />
    <include name="net/ontopia/topicmaps/nav2/realm/test/*.class" />
  </patternset>
  
  <!-- ====================================================================
       Web-Editor: compile, jar, clean
       ==================================================================== -->
  
  <patternset id="sources.webed">
    <include name="net/ontopia/topicmaps/webed/core/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/basic/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/utils/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/association/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/assocrole/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/basename/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/occurrence/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/tmobject/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/topic/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/topicmap/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/variant/*.java" />
    <include name="net/ontopia/topicmaps/webed/servlets/*.java" />
    <include name="net/ontopia/topicmaps/webed/taglibs/*.java" />
    <include name="net/ontopia/topicmaps/webed/taglibs/form/*.java" />
    <include name="net/ontopia/topicmaps/webed/utils/*.java" />
    <include name="net/ontopia/topicmaps/webed/webapps/omnieditor/*.java" />
  </patternset>
  
  <patternset id="classes.webed">
    <include name="net/ontopia/topicmaps/webed/core/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/basic/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/utils/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/association/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/assocrole/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/basename/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/occurrence/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/tmobject/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/topic/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/topicmap/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/variant/*.class" />
    <include name="net/ontopia/topicmaps/webed/servlets/*.class" />
    <include name="net/ontopia/topicmaps/webed/taglibs/*.class" />
    <include name="net/ontopia/topicmaps/webed/taglibs/form/*.class" />
    <include name="net/ontopia/topicmaps/webed/utils/*.class" />
    <include name="net/ontopia/topicmaps/webed/webapps/omnieditor/*.class" />
    <include name="*.vm" />
  </patternset>
  
  <patternset id="sources.test.webed">
    <include name="net/ontopia/topicmaps/webed/impl/basic/test/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/test/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/topic/test/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/topicmap/test/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/association/test/*.java" />
    <include name="net/ontopia/topicmaps/webed/impl/utils/test/*.java" />
    <include name="net/ontopia/topicmaps/webed/utils/test/*.java" />
    <include name="net/ontopia/topicmaps/webed/test/**/*.java" />
    <include name="net/ontopia/topicmaps/webed/webapps/omnieditor/test/*.java" />
  </patternset>
  
  <patternset id="classes.test.webed">
    <include name="net/ontopia/topicmaps/webed/impl/basic/test/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/test/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/topic/test/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/topicmap/test/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/actions/association/test/*.class" />
    <include name="net/ontopia/topicmaps/webed/utils/test/*.class" />
    <include name="net/ontopia/topicmaps/webed/impl/utils/test/*.class" />
    <include name="net/ontopia/topicmaps/webed/test/**/*.class" />
    <include name="net/ontopia/topicmaps/webed/webapps/omnieditor/test/*.class" />
  </patternset>
  
  <!-- ====================================================================
       Web-Editor: API JavaDoc
       ==================================================================== -->
  
  <property name="dist.webed.packagenames" value="
                                                  net.ontopia.topicmaps.webed.core,
                                                  net.ontopia.topicmaps.webed.utils" />
  
  <property name="dev.webed.packagenames" value="
                                                 net.ontopia.topicmaps.webed.impl.actions,
                                                 net.ontopia.topicmaps.webed.impl.basic,
                                                 net.ontopia.topicmaps.webed.impl.utils,
                                                 net.ontopia.topicmaps.webed.taglibs.form,
                                                 net.ontopia.topicmaps.webed.servlets,
                                                 net.ontopia.topicmaps.nav2.webapps.ted,
                                                 net.ontopia.topicmaps.nav2.webapps.ted.model,
                                                 net.ontopia.topicmaps.nav2.webapps.ted.actions,
                                                 ${dist.webed.packagenames}" />
  
  <!-- ======================================================================
       Ontopia distributions
       ==================================================================== -->
  
  <target name="check-jvm">
    <property name="jvm.version" value="1.5" />
    <java classname="net.ontopia.products.CheckJVMVersion" failonerror="true" classpathref="project.classpath">
      <arg value="${jvm.version}" />
    </java>
  </target>
  
  <target name="dist.ontopia.echo">
    <echo>Building ${dist.title}...</echo>
    <echo> - version is '${dist.version}'</echo>
    <echo> - compiler is '${build.compiler}'</echo>
    <echo> - jvm is '${ant.java.version}'</echo>
  </target>
  
  <!-- - - - Ontopia distribution  - - - - - - - - - - - - - - - - - - - - -->
  
  <target name="dist.ontopia" depends="init,check-jvm" description="builds the full ontopia distribution">
    
    <antcall inheritRefs="true" target="dist.ontopia.echo" />
    
    <!-- compile and build jar files -->
    <antcall inheritRefs="true" target="dist.jar.ontopia.body" />
    
    <!-- Clean distribution directory -->
    <delete dir="${build.tmp}" />
    <delete dir="${dist.path}" />
    <mkdir dir="${dist.path}" />
    
    <!-- Collect product structures -->
    <antcall inheritRefs="true" target="dist.product.collect" />
    <antcall inheritRefs="true" target="dist.engine.collect" />
    <antcall inheritRefs="true" target="dist.query.collect" />
    <antcall inheritRefs="true" target="dist.fulltext.collect" />
    <antcall inheritRefs="true" target="dist.schema.collect" />
    <antcall inheritRefs="true" target="dist.webed.collect" />
    <antcall inheritRefs="true" target="dist.navigator.collect" />
    <!-- viz and tmrap must be placed after this task -->
    <antcall inheritRefs="true" target="dist.db2tm.collect" />
    <antcall inheritRefs="true" target="dist.rdbms.collect" />
    <antcall inheritRefs="true" target="dist.classify.collect" />
    <antcall inheritRefs="true" target="dist.viz.collect" />
    <antcall inheritRefs="true" target="dist.tmrap.collect" />
    
    <!-- Collect product tests -->
    <antcall inheritRefs="true" target="dist.engine.test.collect" />
    <antcall inheritRefs="true" target="dist.navigator.test.collect" />
    <antcall inheritRefs="true" target="dist.fulltext.test.collect" />
    <antcall inheritRefs="true" target="dist.query.test.collect" />
    <antcall inheritRefs="true" target="dist.schema.test.collect" />
    <antcall inheritRefs="true" target="dist.webed.test.collect" />
    <antcall inheritRefs="true" target="dist.viz.test.collect" />
    <antcall inheritRefs="true" target="dist.db2tm.test.collect" />
    <antcall inheritRefs="true" target="dist.tmrap.test.collect" />
    <antcall inheritRefs="true" target="dist.rdbms.test.collect" />
    
    <!-- Test configuration -->
    <copy file="${test.path}/config/tests.xml" todir="${dist.path}/tests/test-data" />
    <copy file="${src.path}/dist/tests/tests-ontopia.xml" tofile="${dist.path}/tests/test-data/tests-ontopia.xml" />
    
    <!-- Test scripts -->
    <copy file="${src.path}/dist/tests/runtests-ontopia.sh" tofile="${dist.path}/tests/runtests-ontopia.sh" />
    <copy file="${src.path}/dist/tests/runtests-ontopia.bat" tofile="${dist.path}/tests/runtests-ontopia.bat" />
    <copy file="${src.path}/dist/tests/runtests-rdbms.sh" tofile="${dist.path}/tests/runtests-rdbms.sh" />
    <copy file="${src.path}/dist/tests/runtests-rdbms.bat" tofile="${dist.path}/tests/runtests-rdbms.bat" />
    
    <!-- Fix permissions -->
    <chmod dir="${dist.path}/tests" perm="a+rx" includes="*.sh" />
    
    <copy file="${build.jars}/${dist.name}.jar" todir="${dist.path}/lib" />
    <copy file="${build.jars}/${dist.name}-tests.jar" todir="${dist.path}/lib" />
    <copy file="${build.jars}/${dist.name}.jar" todir="${dist.path}/apache-tomcat/common/lib" />
    
    <!-- Copy templates -->
    <mkdir dir="${dist.path}/config/vm-templates" />
    <copy todir="${dist.path}/config/vm-templates">
      <fileset dir="${src.path}/webapps/webedtest/WEB-INF/templates" />
    </copy>
    
    <!-- Vizigator -->
    <mkdir dir="${dist.path}/bin" />
    <copy file="${src.path}/dist/vizigator/vizdesktop.bat" tofile="${dist.path}/bin/vizdesktop.bat" />
    <copy file="${src.path}/dist/vizigator/vizdesktop.sh" tofile="${dist.path}/bin/vizdesktop.sh" />
    <chmod dir="${dist.path}/bin" perm="a+rx" includes="*.sh" />
    
    <!-- Add accessctl web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.accessctl" />
    
    <!-- Replace ROOT web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.toplevel" />
    
    <!-- Generate javadoc -->
    <antcall inheritRefs="true" target="javadoc.ontopia" />
    <copy todir="${dist.path}/doc/api">
      <fileset dir="${build.javadoc}/ontopia" />
    </copy>
    
    <echo>Generating jar digests...</echo>
    <java classname="net.ontopia.product.JarDigests" fork="true" classpathref="project.classpath">
      <arg value="${dist.path}/lib/" />
      <arg value=".*\.jar" />
      <arg value="${dist.path}/lib/digests.txt" />
    </java>
    
    <!-- Package the distribution -->
    <zip destFile="${build.dists}/${dist.zipfile}" duplicate="preserve">
      <zipfileset dir="${build.dists}" filemode="755" includes="${dist.dir}/apache-tomcat/bin/*.sh" />
      <zipfileset dir="${build.dists}" filemode="755" includes="${dist.dir}/tests/*.sh" />
      <zipfileset dir="${build.dists}">
        <include name="${dist.dir}/**/*" />
        <exclude name="${dist.dir}/apache-tomcat/bin/*.sh" />
        <exclude name="${dist.dir}/tests/*.sh" />
      </zipfileset>
    </zip>
  </target>
  
  <target name="javadoc.ontopia">
    <delete dir="${build.javadoc}/ontopia" />
    <mkdir dir="${build.javadoc}/ontopia" />
    <javadoc packagenames="
                           ${dist.engine.packagenames},
                           ${dist.navigator.packagenames},
                           ${dist.query.packagenames},
                           ${dist.schema.packagenames},
                           ${dist.webed.packagenames},
                           ${dist.db2tm.packagenames},
                           ${dist.rdbms.packagenames}
                           " sourcepath="${java.path}" destdir="${build.javadoc}/ontopia" 
                           author="true" version="true" use="true" public="true" 
                           windowtitle="Ontopia" 
                           doctitle="Ontopia API documentation" 
                           header="&lt;img src='{@docroot}/logo.gif'&gt;" 
                           bottom="&lt;i&gt;Copyright &#169; 2000-2010 &lt;a href='http://www.ontopia.net'&gt;Ontopia&lt;/a&gt;.&lt;/i&gt;" 
                           classpathref="project.classpath">
      <group title="Core Topic Map Packages" packages="net.ontopia.topicmaps.*" />
      <group title="Core Information Set Packages" packages="net.ontopia.infoset.*" />
      <group title="Query Engine Packages" packages="net.ontopia.topicmaps.query.*" />
      <group title="Full-text Integration Packages" packages="net.ontopia.infoset.fulltext.*" />
      <group title="Schema Tools Packages" packages="net.ontopia.topicmaps.schema.*" />
      <group title="Web Editor Packages" packages="net.ontopia.topicmaps.webed.*" />
      <group title="Navigator Framework Packages" packages="net.ontopia.topicmaps.nav.*:net.ontopia.topicmaps.nav2.*" />
      <group title="RDBMS Backend Connector Packages" packages="net.ontopia.topicmaps.impl.rdbms" />
    </javadoc>
    <replace file="${build.javadoc}/ontopia/overview-frame.html" token="{@docroot}" value="." />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${build.javadoc}/ontopia" />
  </target>
  
  <target name="javadoc.ontopia.dev" depends="init">
    <delete dir="${build.javadoc}/ontopia-dev" />
    <mkdir dir="${build.javadoc}/ontopia-dev" />
    <javadoc packagenames="
                           ${dev.engine.packagenames},
                           ${dev.navigator.packagenames},
                           ${dev.fulltext.packagenames},
                           ${dev.query.packagenames},
                           ${dev.schema.packagenames},
                           ${dev.webed.packagenames},
                           ${dev.rdbms.packagenames}
                           " sourcepath="${java.path}" destdir="${build.javadoc}/ontopia-dev" 
                           author="true" version="true" use="true" public="true" 
                           windowtitle="Ontopia" doctitle="Ontopia API documentation" 
                           header="&lt;img src='{@docroot}/logo.gif'&gt;" 
                           bottom="&lt;i&gt;Copyright &#169; 2000-2010 &lt;a href='http://www.ontopia.net'&gt;Ontopia&lt;/a&gt;. All Rights Reserved.&lt;/i&gt;" 
                           classpathref="project.classpath">
      <group title="Core Topic Map Packages" packages="net.ontopia.topicmaps.*" />
      <group title="Core Information Set Packages" packages="net.ontopia.infoset.*" />
      <group title="Query Engine Packages" packages="net.ontopia.topicmaps.query.*" />
      <group title="Full-text Integration Packages" packages="net.ontopia.infoset.fulltext.*" />
      <group title="Schema Tools Packages" packages="net.ontopia.topicmaps.schema.*" />
      <group title="Web Editor Packages" packages="net.ontopia.topicmaps.webed.*" />
      <group title="Navigator Framework Packages" packages="net.ontopia.topicmaps.nav.*:net.ontopia.topicmaps.nav2.*" />
      <group title="RDBMS Backend Connector Packages" packages="net.ontopia.topicmaps.impl.rdbms" />
    </javadoc>
    <replace file="${build.javadoc}/ontopia-dev/overview-frame.html" token="{@docroot}" value="." />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${build.javadoc}/ontopia-dev" />
  </target>
  
  <target name="dist.jar.ontopia.body" depends="check-jvm,prepare.product.class,clean.classes,compile.ontopia,compile.ontopia.test,jar.ontopia.test,jar.ontopia" description="builds the ontopia.jar file">
  </target>
  
  <target name="dist.jar.ontopia" depends="init,dist.jar.ontopia.body" description="builds the ontopia.jar file">
  </target>
  
  <target name="jar.ontopia">
    <property name="dist.name" value="ontopia" />
    <delete file="${build.jars}/${dist.name}.jar" />
    <jar basedir="${build.classes}" jarfile="${build.jars}/${dist.name}.jar" manifest="${src.path}/dist/manifests/manifest-ontopia.mf">
      <patternset refid="classes.engine" />
      <patternset refid="classes.tmapi" />
      <patternset refid="classes.navigator" />
      <patternset refid="classes.fulltext" />
      <patternset refid="classes.query" />
      <patternset refid="classes.schema" />
      <patternset refid="classes.webed" />
      <patternset refid="classes.viz" />
      <patternset refid="images.viz" />
      <patternset refid="resources.viz" />
      <patternset refid="classes.db2tm" />
      <patternset refid="classes.rdbms" />
      <patternset refid="classes.classify" />
    </jar>
  </target>
  
  <!-- Makes sure that all neccessary classes are compiled before packaging ontopia.jar -->
  <target name="compile.ontopia">
    <echo>Copy tolog Service Descriptor...</echo>
    <mkdir dir="${build.classes}/META-INF/services" />
    <copy file="${java.path}/net/ontopia/topicmaps/query/impl/service/tolog.service" tofile="${build.classes}/META-INF/services/net.ontopia.topicmaps.query.core.QueryProcessorFactoryIF" />
    
    <echo>Compiling TMAPI code...</echo>
    <mkdir dir="${build.classes}/META-INF/services" />
    <copy file="${java.path}/net/ontopia/topicmaps/impl/tmapi2/tmsf.service" tofile="${build.classes}/META-INF/services/org.tmapi.core.TopicMapSystemFactory" />
    
    <patternset id="sources.ontopia.core">
      <patternset refid="sources.engine" />
      <patternset refid="sources.tmapi" />
      <patternset refid="sources.query" />
      <patternset refid="sources.schema" />
      <patternset refid="sources.fulltext" />
      <patternset refid="sources.rdbms" />
    </patternset>
    
    <patternset id="sources.ontopia.aux">
      <patternset refid="sources.db2tm" />
      <patternset refid="sources.viz" />
      <patternset refid="sources.navigator" />
      <patternset refid="sources.webed" />
      <patternset refid="sources.classify" />
    </patternset>
    
    <echo>Compiling net.ontopia classes...</echo>
    <javac srcdir="${java.path}" 
            destdir="${build.classes}" 
            optimize="${optimize}" 
            deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            includeantruntime="false" 
            classpathref="project.classpath" source="1.5">
      <patternset refid="sources.ontopia.core" />
    </javac>
    <javac srcdir="${java.path}" 
            destdir="${build.classes}" 
            optimize="${optimize}" 
            deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            includeantruntime="false" 
            classpathref="project.classpath" source="1.5">
      <patternset refid="sources.ontopia.aux" />
    </javac>
    <echo>Copying RelaxNG schemas</echo>
    <copy file="${java.path}/net/ontopia/topicmaps/xml/tmxml.rnc" tofile="${build.classes}/net/ontopia/topicmaps/xml/tmxml.rnc" overwrite="yes" />
    <copy file="${java.path}/net/ontopia/topicmaps/db2tm/db2tm.rnc" tofile="${build.classes}/net/ontopia/topicmaps/db2tm/db2tm.rnc" overwrite="yes" />
    
    <echo>Copying TLDs to META-INF...</echo>
    <copy todir="${build.classes}/META-INF/" overwrite="yes">
      <fileset dir="${src.path}/webapps/webedtest/WEB-INF/jsp/">
        <include name="*.tld" />
      </fileset>
    </copy>
    
    <echo>Copying webed resources...</echo>
    <copy todir="${build.classes}/" overwrite="yes">
      <fileset dir="${basedir}/src/webapps/webedtest/WEB-INF/templates/">
        <include name="*.vm" />
      </fileset>
    </copy>
    
    <echo>Copying rdbms resources...</echo>
    <copy file="${java.path}/net/ontopia/topicmaps/impl/rdbms/config/mapping.xml" tofile="${build.classes}/net/ontopia/topicmaps/impl/rdbms/config/mapping.xml" overwrite="yes" />
    <copy file="${java.path}/net/ontopia/topicmaps/impl/rdbms/config/queries.xml" tofile="${build.classes}/net/ontopia/topicmaps/impl/rdbms/config/queries.xml" overwrite="yes" />
    
    <echo>Copying vizigator resources ... </echo>
    <copy file="${java.path}/net/ontopia/topicmaps/viz/logo.gif" tofile="${build.classes}/net/ontopia/topicmaps/viz/logo.gif" />
    <copy todir="${build.classes}/net/ontopia/topicmaps/viz/" overwrite="yes">
      <fileset dir="${java.path}/net/ontopia/topicmaps/viz/">
        <patternset>
          <include name="messages.properties" />
          <include name="messages_*.properties" />
        </patternset>
      </fileset>
    </copy>
    
    <echo>Copying classify resources ... </echo>
    <copy todir="${build.classes}/net/ontopia/topicmaps/classify/lang" overwrite="yes">
      <fileset dir="${java.path}/net/ontopia/topicmaps/classify/lang">
        <include name="*" />
      </fileset>
    </copy>
    
  </target>
  
  <patternset id="sources.test.ontopia.core">
    <patternset refid="sources.test.engine" />
    <patternset refid="sources.test.tmapi" />
    <patternset refid="sources.test.query" />
    <patternset refid="sources.test.schema" />
    <patternset refid="sources.test.fulltext" />
    <patternset refid="sources.test.rdbms" />
  </patternset>
  <patternset id="sources.test.ontopia.aux">
    <patternset refid="sources.test.db2tm" />
    <patternset refid="sources.test.viz" />
    <patternset refid="sources.test.navigator" />
    <patternset refid="sources.test.webed" />
    <patternset refid="sources.test.classify" />
  </patternset>
  
  <target name="compile.ontopia.test">
    <echo>Compiling test cases for net.ontopia...</echo>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="false" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath" source="1.5"
            includeantruntime="false">
      <patternset refid="sources.test.ontopia.core" />
    </javac>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="false" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath" source="1.5"
            includeantruntime="false">
      <patternset refid="sources.test.ontopia.aux" />
    </javac>
    <!-- copy db2tm mapping files -->
    <copy todir="${build.classes}/net/ontopia/topicmaps/db2tm/test" overwrite="yes">
      <fileset dir="${java.path}/net/ontopia/topicmaps/db2tm/test">
        <include name="*.xml" />
      </fileset>
    </copy>
  </target>
  
  <target name="jar.ontopia.test">
    <property name="dist.name" value="ontopia" />
    <delete file="${build.jars}/${dist.name}-tests.jar" />
    <jar basedir="${build.classes}" jarfile="${build.jars}/${dist.name}-tests.jar" manifest="${src.path}/dist/manifests/manifest-ontopia-tests.mf">
      <patternset refid="classes.test.engine" />
      <patternset refid="classes.test.tmapi" />
      <patternset refid="classes.test.navigator" />
      <patternset refid="classes.test.fulltext" />
      <patternset refid="classes.test.query" />
      <patternset refid="classes.test.schema" />
      <patternset refid="classes.test.webed" />
      <patternset refid="classes.test.db2tm" />
      <patternset refid="classes.test.rdbms" />
      <patternset refid="classes.test.classify" />
      <patternset refid="classes.test.viz" />
    </jar>
  </target>
  
  <!-- - - - Collect web applications - - - - - - - - - - - - - - - - - - - -->
  
  <target name="dist.ontopia.webapp.i18n">
    <!-- Add i18n web application -->
    <echo>Adding i18n web application...</echo>
    <copy todir="${dist.path}/apache-tomcat/webapps/i18n">
      <fileset dir="${src.path}/webapps/i18n" />
    </copy>
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/i18n/WEB-INF/work" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/i18n/WEB-INF/classes" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/i18n/WEB-INF/lib" />
  </target>
  
  <target name="dist.ontopia.webapp.xmltools">
    <!-- Add xmltools web application -->
    <copy todir="${dist.path}/apache-tomcat/webapps/xmltools">
      <fileset dir="${src.path}/webapps/xmltools" />
    </copy>
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/xmltools/WEB-INF/classes" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/xmltools/WEB-INF/lib" />
  </target>
  
  <target name="dist.ontopia.webapp.manage">
    <!-- Add manage web application -->
    <copy todir="${dist.path}/apache-tomcat/webapps/manage">
      <fileset dir="${src.path}/webapps/manage" />
    </copy>
  </target>
  
  <target name="dist.ontopia.webapp.accessctl">
    <!-- Add accessctl web application -->
    <copy todir="${dist.path}/apache-tomcat/webapps/accessctl">
      <fileset dir="${src.path}/webapps/accessctl" />
    </copy>
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/accessctl/WEB-INF/topicmaps" />
    <copy file="${src.path}/webapps/accessctl/WEB-INF/topicmaps/userman.ltm" tofile="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps/userman.ltm" overwrite="yes" />
  </target>
  
  <!-- - - - Collect common product structure - - - - - - - - - - - - - - - -->
  
  <target name="dist.product.collect">
    <echo>Building and collecting common product components...</echo>
    
    <!-- Create product directory -->
    <delete dir="${dist.path}" />
    <mkdir dir="${dist.path}" />
    
    <!-- Create lib directory -->
    <mkdir dir="${dist.path}/lib" />
    
    <!-- Make sure we have Apache Tomcat -->
    <antcall inheritRefs="true" target="download-apache-tomcat" />
    
    <!-- Collect 3rdparty jar files -->
    <copy file="${3rdparty.path}/jing.jar" tofile="${dist.path}/lib/jing.jar" />
    <copy file="${3rdparty.path}/touchgraph.jar" tofile="${dist.path}/lib/touchgraph.jar" />
    <copy file="${3rdparty.path}/trove.jar" tofile="${dist.path}/lib/trove.jar" />
    
    <!-- Collect lib jar files -->
    <copy file="${lib.path}/antlr-2.7.7.jar" tofile="${dist.path}/lib/antlr.jar" />
    <copy file="${lib.path}/commons-collections-3.2.1.jar" tofile="${dist.path}/lib/commons-collections.jar" />
    <copy file="${lib.path}/backport-util-concurrent-3.1.jar" tofile="${dist.path}/lib/backport-util-concurrent.jar" />
    <copy file="${lib.path}/commons-dbcp-1.3.jar" tofile="${dist.path}/lib/commons-dbcp.jar" />
    <copy file="${lib.path}/commons-pool-1.5.4.jar" tofile="${dist.path}/lib/commons-pool.jar" />
    <copy file="${lib.path}/commons-io-1.1.jar" tofile="${dist.path}/lib/commons-io.jar" />
    <copy file="${lib.path}/commons-fileupload-1.1.jar" tofile="${dist.path}/lib/commons-fileupload.jar" />
    <copy file="${lib.path}/concurrent-1.3.4.jar" tofile="${dist.path}/lib/concurrent.jar" />
    <copy file="${lib.path}/crimson-1.1.3.jar" tofile="${dist.path}/lib/crimson.jar" />
    <copy file="${lib.path}/java-getopt-1.0.9.jar" tofile="${dist.path}/lib/getopt.jar" />
    <copy file="${lib.path}/icu4j-3.4.4.jar" tofile="${dist.path}/lib/icu4j.jar" />
    <copy file="${lib.path}/jena-2.6.2.jar" tofile="${dist.path}/lib/jena.jar" />
    <copy file="${lib.path}/iri-0.8.jar" tofile="${dist.path}/lib/iri.jar" />
    <copy file="${lib.path}/jgroups-2.6.10.GA.jar" tofile="${dist.path}/lib/jgroups.jar" />
    <copy file="${lib.path}/junit-3.8.2.jar" tofile="${dist.path}/lib/junit.jar" />
    <copy file="${lib.path}/slf4j-api-1.5.11.jar" tofile="${dist.path}/lib/slf4j-api.jar" />
    <copy file="${lib.path}/slf4j-log4j12-1.5.11.jar" tofile="${dist.path}/lib/slf4j-log4j12.jar" />
    <copy file="${lib.path}/jcl-over-slf4j-1.5.11.jar" tofile="${dist.path}/lib/jcl-over-slf4j.jar" />
    <copy file="${lib.path}/log4j-1.2.14.jar" tofile="${dist.path}/lib/log4j.jar" />
    <copy file="${lib.path}/lucene-core-2.2.0.jar" tofile="${dist.path}/lib/lucene.jar" />
    <copy file="${lib.path}/opencsv-1.8.jar" tofile="${dist.path}/lib/opencsv.jar" />
    <copy file="${lib.path}/velocity-1.3.jar" tofile="${dist.path}/lib/velocity.jar" />
    <copy file="${lib.path}/xercesImpl-2.7.1.jar" tofile="${dist.path}/lib/xerces.jar" />
    <copy file="${lib.path}/tmapi-2.0.2.jar" tofile="${dist.path}/lib/tmapi.jar" />
    <copy file="${lib.path}/tmapi-tests-2.0.2.jar" tofile="${dist.path}/lib/tmapi-tests.jar" />

    <copy file="${lib.path}/lucene-snowball-2.0.0.jar" tofile="${dist.path}/lib/lucene-snowball.jar" />
    <copy file="${lib.path}/tagsoup-1.2.jar" tofile="${dist.path}/lib/tagsoup.jar" />
    <copy file="${lib.path}/poi-3.6.jar" tofile="${dist.path}/lib/poi.jar" />
    <copy file="${lib.path}/poi-ooxml-3.6.jar" tofile="${dist.path}/lib/poi-ooxml.jar" />
    <copy file="${lib.path}/poi-scratchpad-3.6.jar" tofile="${dist.path}/lib/poi-scratchpad.jar" />
    <copy file="${lib.path}/poi-ooxml-schemas-3.6.jar" tofile="${dist.path}/lib/poi-ooxml-schemas.jar" />
    <copy file="${lib.path}/pdfbox-1.1.0.jar" tofile="${dist.path}/lib/pdfbox.jar" />
    <copy file="${lib.path}/fontbox-1.1.0.jar" tofile="${dist.path}/lib/fontbox.jar" />
    <copy file="${lib.path}/jempbox-1.1.0.jar" tofile="${dist.path}/lib/jempbox.jar" />
    <copy file="${lib.path}/dom4j-1.6.1.jar" tofile="${dist.path}/lib/dom4j.jar" />
    <copy file="${lib.path}/xmlbeans-2.3.0.jar" tofile="${dist.path}/lib/xmlbeans.jar" />
    
    <copy todir="${dist.path}/apache-tomcat/common/lib" overwrite="yes">
      <fileset dir="${dist.path}/lib">
        <include name="*.jar" />
        <exclude name="ontopia-tests.jar" />
        <!-- don't copy classify dependencies to tomcat -->
        <exclude name="lucene-snowball.jar" />
        <exclude name="tagsoup.jar" />
        <exclude name="poi.jar" />
        <exclude name="poi-scratchpad.jar" />
        <exclude name="poi-ooxml.jar" />
        <exclude name="poi-ooxml-schemas.jar" />
        <exclude name="pdfbox.jar" />
        <exclude name="fontbox.jar" />
        <exclude name="jempbox.jar" />
        <exclude name="dom4j.jar" />
        <exclude name="xmlbeans.jar" />
      </fileset>
    </copy>
    <copy file="${lib.path}/jstl-1.1.2.jar" tofile="${dist.path}/apache-tomcat/common/lib/jstl.jar" />
    <copy file="${lib.path}/standard-1.1.2.jar" tofile="${dist.path}/apache-tomcat/common/lib/standard.jar" />
    
    <!-- Create doc directory -->
    <mkdir dir="${dist.path}/doc" />
    
    <!-- Generate documentation -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/ontopia/whatsnew.xml" />
    </antcall>
    <copy file="${doc.path}/ontopia/whatsnew.xml.html" tofile="${dist.path}/doc/whatsnew.html" />
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/ontopia/startup.xml" />
    </antcall>
    <copy file="${doc.path}/ontopia/startup.xml.html" tofile="${dist.path}/doc/install.html" />
    
    <copy file="${doc.path}/ontopia/copyrights.txt" todir="${dist.path}/doc" />
    
    <copy todir="${dist.path}/doc/misc">
      <fileset dir="${doc.path}/ontopia">
        <patternset>
          <include name="*.gif" />
        </patternset>
        <patternset>
          <include name="*.png" />
        </patternset>
      </fileset>
    </copy>
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/misc" />
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/ltm/tutorial.xml" />
    </antcall>
    <copy file="${doc.path}/ltm/tutorial.xml.html" tofile="${dist.path}/doc/misc/ltm.html" />
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/rdf2tm/spec.xml" />
    </antcall>
    <copy file="${doc.path}/rdf2tm/spec.xml.html" tofile="${dist.path}/doc/misc/rdf2tm.html" />
    
    <!-- Copy stylesheets -->
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/misc" />
    
    <!-- Collect documentation -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc" />
    
    <!-- Generate index pages -->
    <echo message="Generating HTML index pages..." />
    <texen controlTemplate="docindex-control.vm" 
            templatePath="${src.path}/dist/doc/" 
            outputFile="docindex.report" outputDirectory="${build.tmp}" 
            productVersion="Version ${dist.version}, builddate ${dist.date.full}" />
    <copy file="${build.tmp}/docindex.html" overwrite="yes" tofile="${dist.path}/index.html" />
    
    <!-- Copy license -->
    <copy file="${doc.path}/ontopia/license.txt" tofile="${dist.path}/doc/license.txt" overwrite="yes" />
    
  </target>
  
  <!-- - - - Collect engine components - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.engine.collect">
    <echo>Collecting engine components...</echo>
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/engine/devguide.xml" />
    </antcall>
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/engine" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/engine" />
    
    <!-- Collect engine documentation -->
    <copy file="${doc.path}/engine/devguide.xml.html" tofile="${dist.path}/doc/engine/devguide.html" />
    <copy todir="${dist.path}/doc/engine">
      <fileset dir="${doc.path}/engine">
        <patternset>
          <include name="*.gif" />
        </patternset>
        <patternset>
          <include name="*.png" />
        </patternset>
      </fileset>
    </copy>
    
    <!-- Compile code examples -->
    <javac srcdir="${doc.path}/engine" destdir="${doc.path}/engine" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath"
            includeantruntime="false">
      <patternset>
        <include name="*.java" />
      </patternset>
    </javac>
    
  </target>
  
  <target name="dist.engine.test.collect" depends="download-xtm2, download-xtm21, download-tmxml, download-ctm, download-jtm">
    
    <!-- Test data -->
    <copy todir="${dist.path}/tests/test-data/canonical/baseline">
      <fileset dir="${test.path}/canonical/baseline" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/canonical/in">
      <fileset dir="${test.path}/canonical/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/canonical/extra">
      <fileset dir="${test.path}/canonical/extra" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/canonical/errors">
      <fileset dir="${test.path}/canonical/errors" />
    </copy>
    <mkdir dir="${dist.path}/tests/test-data/canonical/out" />
    
    <copy todir="${dist.path}/tests/test-data/merge/baseline">
      <fileset dir="${test.path}/merge/baseline" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/merge/in">
      <fileset dir="${test.path}/merge/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/metadata">
      <fileset dir="${test.path}/metadata" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/various">
      <fileset dir="${test.path}/various" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/ltm/baseline">
      <fileset dir="${test.path}/ltm/baseline" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/ltm/in">
      <fileset dir="${test.path}/ltm/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/ltm/extra">
      <fileset dir="${test.path}/ltm/extra" />
    </copy>
    
    <copy todir="${dist.path}/tests/test-data/rdf/baseline">
      <fileset dir="${test.path}/rdf/baseline" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/rdf/err">
      <fileset dir="${test.path}/rdf/err" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/rdf/in">
      <fileset dir="${test.path}/rdf/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/rdf/various">
      <fileset dir="${test.path}/rdf/various" />
    </copy>
    <mkdir dir="${dist.path}/tests/test-data/rdf/out" />
    
    <copy todir="${dist.path}/tests/test-data/tm2rdf/in">
      <fileset dir="${test.path}/rdf/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/tm2rdf/baseline">
      <fileset dir="${test.path}/tm2rdf/baseline" />
    </copy>
    <mkdir dir="${dist.path}/tests/test-data/rm2rdf/tmp" />
    
    <copy todir="${dist.path}/tests/test-data/tmrap">
      <fileset dir="${test.path}/tmrap" />
    </copy>
    
    <copy todir="${dist.path}/tests/test-data/tmsync">
      <fileset dir="${test.path}/tmsync" />
    </copy>
    
    <copy todir="${dist.path}/tests/test-data/xtm2">
      <fileset dir="${test.path}/xtm2" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/xtm21">
      <fileset dir="${test.path}/xtm21" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/tmxml">
      <fileset dir="${test.path}/tmxml" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/cxtm">
      <fileset dir="${test.path}/cxtm" />
    </copy>
    
  </target>
  
  <!-- - - - Collect navigator runtime components  - - - - - - - - - - - - - -->
  
  <target name="checkfiles-apache-tomcat">
    <!-- checks if files have already been downloaded -->
    <available file="${lib.path}/apache-tomcat-5.5.27.zip" property="apache-tomcat.exists" />
  </target>
  
  <target name="download-apache-tomcat" depends="checkfiles-apache-tomcat" unless="apache-tomcat.exists">
    <!-- download apache-tomcat -->
    <get src="http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.27/bin/apache-tomcat-5.5.27.zip" dest="${lib.path}/apache-tomcat-5.5.27.zip" usetimestamp="true" />
  </target>
  
  <target name="dist.navigator.collect">
    <echo>Collecting navigator runtime components...</echo>
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/omnigator/user-guide.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/navigator/config.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/navigator/devguide.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/navigator/taglib-reference.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/navigator/userman.xml" />
    </antcall>
    
    <!-- Unpack and rename apache tomcat -->
    <unzip src="${lib.path}/apache-tomcat-5.5.27.zip" dest="${dist.path}" />
    <move file="${dist.path}/apache-tomcat-5.5.27" tofile="${dist.path}/apache-tomcat" />
    
    <!-- creating empty file in TOMCAT_HOME/temp -->
    <copy file="${src.path}/dist/tomcat/README.Ontopia" todir="${dist.path}/apache-tomcat/" overwrite="yes" />
    <copy file="${dist.path}/apache-tomcat/README.Ontopia" tofile="${dist.path}/apache-tomcat/temp/trash" overwrite="yes" />
    
    <!-- Copy Windows little startup icon -->
    <copy file="${src.path}/dist/tomcat/startup.pif" todir="${dist.path}/apache-tomcat/bin" />
    
    <!-- Replace server.xml -->
    <copy file="${src.path}/dist/tomcat/server.xml" tofile="${dist.path}/apache-tomcat/conf/server.xml" overwrite="yes" />
    
    <!-- Copy tomcat log4j configuration -->
    <copy file="${src.path}/dist/tomcat/log4j.properties" tofile="${dist.path}/apache-tomcat/common/classes/log4j.properties" overwrite="yes" />
    
    <!-- Copy startup scripts -->
    <copy file="${src.path}/dist/tomcat/setclasspath.bat" tofile="${dist.path}/apache-tomcat/bin/setclasspath.bat" overwrite="yes" />
    <copy file="${src.path}/dist/tomcat/catalina.bat" tofile="${dist.path}/apache-tomcat/bin/catalina.bat" overwrite="yes" />
    <copy file="${src.path}/dist/tomcat/catalina.sh" tofile="${dist.path}/apache-tomcat/bin/catalina.sh" overwrite="yes" />
    
    <!-- Fix permissions -->
    <chmod dir="${dist.path}/apache-tomcat/bin" perm="a+rx" includes="*.sh" />
    
    <!-- Delete web applications -->
    <antcall inheritRefs="true" target="delete.tomcat.webapps" />
    
    <!-- Build Ontopia realm -->
    <antcall inheritRefs="true" target="jar.topicmaprealm" />
    <copy file="${build.jars}/ontopia-realm.jar" tofile="${dist.path}/apache-tomcat/server/lib/ontopia-realm.jar" overwrite="yes" />
    
    <!-- Copy JAAS config file -->
    <copy file="${src.path}/dist/tomcat/jaas.config" tofile="${dist.path}/apache-tomcat/conf/jaas.config" overwrite="yes" />
    
    <!-- Collect omnigator web application -->
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator">
      <fileset dir="${src.path}/webapps/omnigator" />
    </copy>
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/work" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/classes" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/lib" />
    <move file="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/config/tm-sources.xml" tofile="${dist.path}/apache-tomcat/common/classes/tm-sources.xml" />
    <!-- Delete JSP example directory -->
    <delete dir="${dist.path}/apache-tomcat/webapps/omnigator/framework-examples" />
    
    <!-- Clear the plugins directory -->
    <delete dir="${dist.path}/apache-tomcat/webapps/omnigator/plugins" />
    <!-- Copy plugins -->
    <mkdir dir="${dist.path}/apache-tomcat/webapps/omnigator/plugins" />
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/plugins">
      <fileset dir="${src.path}/webapps/omnigator/plugins">
        <include name="customise/*/**" />
        <include name="edit/*/**" />
        <include name="export/*/**" />
        <include name="feedback/*/**" />
        <include name="filter/*/**" />
        <include name="fulltext/*/**" />
        <include name="hello/*/**" />
        <include name="ltm/*/**" />
        <include name="merge/*/**" />
        <include name="plugins/*/**" />
        <include name="rdf2tm/*/**" />
        <include name="samples/*/**" />
        <include name="statistics/*/**" />
        <include name="tmlink/*/**" />
        <include name="validator/*/**" />
        <include name="viz/*/**" />
        <include name="query/*/**" />
      </fileset>
    </copy>
    
    <!-- Collect omnigator documentation -->
    <copy file="${doc.path}/navigator/config.xml.html" tofile="${dist.path}/doc/navigator/config.html" />
    <copy file="${doc.path}/navigator/devguide.xml.html" tofile="${dist.path}/doc/navigator/navguide.html" />
    <copy file="${doc.path}/navigator/taglib-reference.xml.html" tofile="${dist.path}/doc/navigator/tolog-taglib.html" />
    <copy file="${doc.path}/navigator/userman.xml.html" tofile="${dist.path}/doc/navigator/userman.html" />
    <copy todir="${dist.path}/doc/navigator">
      <fileset dir="${doc.path}/navigator">
        <patternset>
          <include name="*.png" />
        </patternset>
        <patternset>
          <include name="*.gif" />
        </patternset>
      </fileset>
    </copy>
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/navigator" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/navigator" />
    
    <!-- Copy the user guide to the web application -->
    <mkdir dir="${dist.path}/apache-tomcat/webapps/omnigator/docs/navigator" />
    <copy file="${doc.path}/omnigator/user-guide.xml.html" tofile="${dist.path}/apache-tomcat/webapps/omnigator/docs/navigator/userguide.html" />
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/navigator/graphics">
      <fileset dir="${doc.path}/omnigator/graphics" />
    </copy>
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/navigator">
      <fileset dir="${doc.path}/navigator">
        <patternset>
          <include name="*.png" />
        </patternset>
        <patternset>
          <include name="*.gif" />
        </patternset>
      </fileset>
    </copy>
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/navigator" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/navigator" />
    
    <!-- Collect query documentation -->
    <copy file="${doc.path}/tolog/tutorial.xml.html" tofile="${dist.path}/apache-tomcat/webapps/omnigator/docs/query/tutorial.html" />
    <copy file="${doc.path}/tolog/predicate-ref.xml.html" tofile="${dist.path}/apache-tomcat/webapps/omnigator/docs/query/predicate-reference.html" />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/query" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/query" />
    
    <!-- Collect schema documentation -->
    <copy file="${doc.path}/osl/schemaspec.xml.html" tofile="${dist.path}/apache-tomcat/webapps/omnigator/docs/schema/spec.html" />
    <copy file="${doc.path}/osl/tutorial.xml.html" tofile="${dist.path}/apache-tomcat/webapps/omnigator/docs/schema/tutorial.html" />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/schema" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/schema" />
    
    <!-- Copy example topic maps to the web application documentation dir -->
    <copy file="${topicmaps.path}/ItalianOpera.ltm" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/navigator" />
    <copy file="${topicmaps.path}/i18n.ltm" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs" />
    <copy file="${topicmaps.path}/jill.xtm" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs" />
    
    <!-- Replace topic map files which will be used by omnigator -->
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps" />
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps">
      <fileset dir="${topicmaps.path}">
        <!-- omnigator -->
        <include name="KanzakisConcerts.rdf" />
        <include name="MyMusic.xtm" />
        <include name="dc.ltmm" />
        <include name="dc.xtmm" />
        <include name="i18n.ltm" />
        <include name="i18n.ltm.osl" />
        <include name="jill.xtm" />
        <include name="jill.xtm.osl" />
        <include name="mapping.rdff" />
        <include name="ItalianOpera.ltm" />
        <include name="ItalianOpera.ltm.osl" />
        <include name="pokemon.ltm" />
        <include name="support-kb.ltm" />
        <include name="tm-standards.xtm" />
        <include name="xmltools-tm.xtm" />
        <include name="xmltools-tm.xtm.osl" />
        <!-- ontopoly -->
        <include name="ADL-FTT.xtm" />
        <include name="GCL-2-1.xtm" />
        <include name="JillsMusic.xtm" />
        <include name="KevinsPlan.xtm" />
        <include name="MyConcerts.xtm" />
        <include name="MyPlan.xtm" />
        <include name="MyThesaurus.xtm" />
        <include name="TapsasConcerts.xtm" />
      </fileset>
    </copy>
    <delete file="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps/tasks.ltm" />
    <move todir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/schemas">
      <fileset dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps">
        <include name="*.osl" />
      </fileset>
    </move>
    
    <!-- mondial.xtm  -->
    <gunzip src="${topicmaps.path}/mondial.xtm.gz" dest="${topicmaps.path}/mondial.xtm" />
    <copy file="${topicmaps.path}/mondial.xtm" todir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps" overwrite="yes" />
    
    <!-- Insert Versionnumber and Builddate for display into omnigator -->
    <replace file="${dist.path}/apache-tomcat/webapps/omnigator/fragments/tagline-header.jsp" token="@VERSION@" value="${dist.version}" />
    <replace file="${dist.path}/apache-tomcat/webapps/omnigator/fragments/tagline-header.jsp" token="@DATE@" value="${build.date}" />
    
    <!-- Add i18n web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.i18n" />
    
    <!-- Add xmltools web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.xmltools" />
    
    <!-- Add manage web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.manage" />
    
    <!-- Add ontopoly web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.ontopoly" />
    
  </target>

  <target name="delete.tomcat.webapps" unless="keep.tomcat.webapps">
    <echo>Deleting tomcat web applications</echo>
    <delete quiet="true" dir="${dist.path}/apache-tomcat/server/webapps/manager" />
    <delete quiet="true" file="${dist.path}/apache-tomcat/conf/Catalina/localhost/manager.xml" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/webdav" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/tomcat-docs" />
  </target>
  
  <target name="dist.navigator.test.collect">
    
    <!-- Navigator test files and configuration -->
    <copy todir="${dist.path}/tests/test-data/nav2">
      <fileset dir="${test.path}/nav2" />
    </copy>
    
    <copy todir="${dist.path}/tests/test-data/ontopoly">
      <fileset dir="${test.path}/ontopoly" />
    </copy>
    
  </target>
  
  <!-- - - - Collect fulltext components - - - - - - - - - - - - - - - - - - -->
  <target name="dist.fulltext.collect">
    
  </target>
  
  <target name="dist.fulltext.test.collect">
    
  </target>
  
  <!-- - - - Collect db2tm components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.db2tm.collect">
    
    <!-- build and copy documentation -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/db2tm/devguide.xml" />
    </antcall>
    <copy file="${doc.path}/db2tm/devguide.xml.html" tofile="${dist.path}/doc/db2tm/user-guide.html" />
    <copy file="${java.path}/net/ontopia/topicmaps/db2tm/db2tm.rnc" tofile="${dist.path}/doc/db2tm/db2tm.rnc" />
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/db2tm" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/db2tm" />
    
  </target>
  
  <target name="dist.db2tm.test.collect">
    
    <copy todir="${dist.path}/tests/test-data/db2tm">
      <fileset dir="${test.path}/db2tm">
        <exclude name="out" />
      </fileset>
    </copy>
    
  </target>
  
  <!-- - - - Collect tmrap components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.tmrap.collect">
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/tmrap/devguide.xml" />
    </antcall>
    <copy file="${doc.path}/tmrap/devguide.xml.html" tofile="${dist.path}/doc/tmrap/dev-guide.html" />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/tmrap" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/tmrap" />
    
    <unzip src="${src.path}/webapps/tmrap/tmrap.zip" dest="${dist.path}/apache-tomcat/webapps/" />
    
  </target>
  
  <target name="dist.tmrap.test.collect">
    
  </target>
  
  <!-- - - - Collect classify runtime components - - - - - - - - - - - - - - -->
  
  <target name="dist.classify.collect">
    <echo>Collecting classify components...</echo>

    <mkdir dir="${doc.path}/classify"/>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/classify/devguide.xml" />
    </antcall>
    <copy file="${doc.path}/classify/devguide.xml.html" tofile="${dist.path}/doc/classify/dev-guide.html" />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/classify" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/classify" />    
  </target>
  
  <!-- - - - Collect rdbms components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.rdbms.collect">
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/rdbms/install.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/rdbms/devguide.xml" />
    </antcall>
    <javac srcdir="${doc.path}/rdbms" destdir="${doc.path}/rdbms" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath"
            includeantruntime="false">
      <patternset>
        <include name="*.java" />
      </patternset>
    </javac>
    
    <!-- Collect documentation -->
    <mkdir dir="${dist.path}/doc/rdbms" />
    <copy file="${doc.path}/rdbms/install.xml.html" tofile="${dist.path}/doc/rdbms/install.html" />
    <copy file="${doc.path}/rdbms/devguide.xml.html" tofile="${dist.path}/doc/rdbms/devguide.html" />
    
    <copy file="${doc.path}/rdbms/RdbmsImport.java" todir="${dist.path}/doc/rdbms" />
    <copy file="${doc.path}/rdbms/RdbmsExport.java" todir="${dist.path}/doc/rdbms" />
    <copy file="${doc.path}/rdbms/RdbmsList.java" todir="${dist.path}/doc/rdbms" />
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/rdbms" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/rdbms" />
    
    <!-- Collect sample database property -->
    <mkdir dir="${dist.path}/rdbms/config" />
    <copy todir="${dist.path}/rdbms/config/">
      <fileset dir="${src.path}/dist/rdbms/">
        <include name="db.oracle8.props" />
        <include name="db.oracle9i.props" />
        <include name="db.oracle10g.props" />
        <include name="db.postgresql.props" />
        <include name="db.sqlserver.props" />
        <include name="db.mysql.props" />
        <include name="db.h2.props" />
      </fileset>
    </copy>
    
    <!-- Collection clustering configuration -->
    <mkdir dir="${dist.path}/rdbms/clustering" />
    <copy file="${src.path}/dist/rdbms/ontopia-terracotta.xml" todir="${dist.path}/rdbms/clustering" />
    
  </target>
  
  <target name="dist.rdbms.test.collect">
    
  </target>
  
  <!-- - - - Collect schema components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.schema.collect">
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/osl/schemaspec.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/osl/tutorial.xml" />
    </antcall>
    
    <!-- Collect documentation -->
    <mkdir dir="${dist.path}/doc/schema" />
    <copy file="${doc.path}/osl/schemaspec.xml.html" tofile="${dist.path}/doc/schema/spec.html" />
    <copy file="${doc.path}/osl/tutorial.xml.html" tofile="${dist.path}/doc/schema/tutorial.html" />
    <copy file="${doc.path}/osl/osl.dtd" tofile="${dist.path}/doc/schema/schema.dtd" />
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/schema" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/schema" />
    
  </target>
  
  <target name="dist.schema.test.collect">
    
    <!-- Test data -->
    <copy todir="${dist.path}/tests/test-data/schema">
      <fileset dir="${test.path}/schema" />
    </copy>
    
  </target>
  
  <!-- - - - Collect query components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.query.collect">
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/tolog/tutorial.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/tolog/predicate-ref.xml" />
    </antcall>
    
    <!-- Collect documentation -->
    <copy file="${doc.path}/tolog/tutorial.xml.html" tofile="${dist.path}/doc/query/tutorial.html" />
    <copy file="${doc.path}/tolog/predicate-ref.xml.html" tofile="${dist.path}/doc/query/predicate-reference.html" />
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/query" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/query" />
    
  </target>
  
  <target name="dist.query.test.collect">
    
    <!-- Test data -->
    <copy todir="${dist.path}/tests/test-data/query">
      <fileset dir="${test.path}/query" />
    </copy>
    
  </target>
  
  <!-- - - - Collect webed components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.webed.collect">
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/webed/action-ref.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/webed/devguide.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/webed/taglib-ref.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/webed/config.xml" />
    </antcall>
    
    <!-- Collect documentation -->
    <mkdir dir="${dist.path}/doc/webed" />
    <copy file="${doc.path}/webed/action-ref.xml.html" tofile="${dist.path}/doc/webed/action-ref.html" />
    <copy file="${doc.path}/webed/devguide.xml.html" tofile="${dist.path}/doc/webed/devguide.html" />
    <copy file="${doc.path}/webed/taglib-ref.xml.html" tofile="${dist.path}/doc/webed/taglib.html" />
    <copy file="${doc.path}/webed/config.xml.html" tofile="${dist.path}/doc/webed/config.html" />
    <copy file="${src.path}/webapps/webedtest/WEB-INF/config/actionConfig.dtd" tofile="${dist.path}/doc/webed/actionConfig.dtd" />
    <copy file="${src.path}/webapps/webedtest/WEB-INF/config/actionConfig.rnc" tofile="${dist.path}/doc/webed/actionConfig.rnc" />
    
    <copy todir="${dist.path}/doc/webed">
      <fileset dir="${doc.path}/webed">
        <patternset>
          <include name="*.gif" />
        </patternset>
        <patternset>
          <include name="*.png" />
        </patternset>
      </fileset>
    </copy>
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/webed" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/webed" />
    
  </target>
  
  <target name="dist.webed.test.collect">
    
    <!-- Test data -->
    <copy todir="${dist.path}/tests/test-data/webed">
      <fileset dir="${test.path}/webed" />
    </copy>
    
  </target>
  
  <!-- - - - Collect viz components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.viz.collect">
    
    <antcall inheritRefs="true" target="jar.vizlet" />
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/vizigator/user-guide.xml" />
    </antcall>
    
    <!-- Collect documentation -->
    <mkdir dir="${dist.path}/apache-tomcat/webapps/omnigator/docs/vizigator" />
    <copy file="${doc.path}/vizigator/user-guide.xml.html" tofile="${dist.path}/apache-tomcat/webapps/omnigator/docs/vizigator/userguide.html" />
    
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/vizigator">
      <fileset dir="${doc.path}/vizigator">
        <patternset>
          <include name="*.gif" />
        </patternset>
        <patternset>
          <include name="*.png" />
        </patternset>
      </fileset>
    </copy>
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/vizigator" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/vizigator" />
    
    <!-- Copy jar-files -->
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/plugins/viz" file="${build.jars}/ontopia-vizlet.jar" overwrite="yes" />
    
    <copy file="${build.jars}/ontopia-vizlet.jar" tofile="${dist.path}/extras/ontopia-vizlet.jar" />
    <copy file="${build.jars}/signed-vizlet.jar" tofile="${dist.path}/extras/signed-vizlet.jar" />
    
    <!-- VizPlugin configurations -->
    <property name="vizcfg" value="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps/" />
    <copy file="${topicmaps.path}/i18n.ltm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/mondial.xtm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/tm-standards.xtm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/ItalianOpera.ltm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/xmltools-tm.xtm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/KanzakisConcerts.rdf.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/pokemon.ltm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/support-kb.ltm.viz" todir="${vizcfg}" />
    
  </target>
  
  <target name="dist.viz.test.collect">
  </target>
  
  <!-- - - - Ontopoly web application  - - - - - - - - - - - - - - - - - - -->
  <target name="dist.ontopia.webapp.ontopoly">
    
    <property name="build.ontopoly" value="${dist.path}/apache-tomcat/webapps/ontopoly" />
    <delete dir="${build.ontopoly}" />
    <mkdir dir="${build.ontopoly}/doc" />
    <mkdir dir="${build.ontopoly}/WEB-INF/lib"/>
    
    <!-- documentation -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/ontopoly/user-guide.xml" />
    </antcall>
    <copy file="${doc.path}/ontopoly/user-guide.xml.html" tofile="${build.ontopoly}/doc/user-guide.html" />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${build.ontopoly}/doc" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${build.ontopoly}/doc" />
    <copy todir="${build.ontopoly}/doc/images/">
      <fileset dir="${doc.path}/ontopoly/images" />
    </copy>
    
    <copy todir="${build.ontopoly}" overwrite="yes">
      <fileset dir="${webapps.path}/ontopoly/src/main/webapp" />
    </copy>
    <copy todir="${build.ontopoly}/WEB-INF/classes" overwrite="yes">
      <fileset dir="${webapps.path}/ontopoly/src/main/java">
        <patternset>
          <exclude name="**/*.java" />
        </patternset>
      </fileset>
    </copy>
    <javac srcdir="${webapps.path}/ontopoly/src/main/java" destdir="${build.ontopoly}/WEB-INF/classes" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath"
            includeantruntime="false">
      <include name="**/*.java" />
    </javac>
    <jar basedir="${build.ontopoly}/WEB-INF/classes" jarfile="${build.ontopoly}/WEB-INF/lib/ontopoly.jar" />
    <delete dir="${build.ontopoly}/WEB-INF/classes" />
    
    <copy todir="${build.ontopoly}/WEB-INF/lib" overwrite="yes">
      <fileset dir="${lib.path}">
        <patternset>
          <include name="wicket-1.4.8.jar" />
          <include name="wicket-datetime-1.4.8.jar" />
          <include name="wicket-extensions-1.4.8.jar" />
          <include name="joda-time-1.6.jar" />
        </patternset>
      </fileset>
    </copy>
  </target>
  
  <target name="build.ontopoly" depends="init">
    <property name="build.ontopoly" value="${build.tmp}/ontopoly" />
    <antcall inheritRefs="true" target="dist.ontopia.webapp.ontopoly"/>
    <war destfile="${dist.path}/apache-tomcat/webapps/ontopoly.war" webxml="${build.ontopoly}/WEB-INF/web.xml">
      <fileset dir="${build.ontopoly}"/>
    </war>
  </target>
  
  <target name="dist.ontopia.webapp.toplevel">
    
    <echo>Replacing ROOT web application...</echo>
    <delete dir="${dist.path}/apache-tomcat/webapps/ROOT" />
    <copy todir="${dist.path}/apache-tomcat/webapps/ROOT">
      <fileset dir="${src.path}/webapps/toplevel" />
    </copy>
  </target>
  
  <!-- ======================================================================
       Dummy logger classes - used by vizlet
       ==================================================================== -->
  
  <patternset id="sources.dummyLoggers">
    <include name="org/apache/log4j/*.java" />
    <include name="org/apache/log4j/spi/*.java" />
    <include name="org/slf4j/*.java" />
  </patternset>
  
  <patternset id="classes.dummyLoggers">
    <include name="org/apache/log4j/*.class" />
    <include name="org/apache/log4j/spi/*.class" />
    <include name="org/slf4j/*.class" />
  </patternset>
  
  <target name="compile.dummyLoggers">
    <echo>Compiling dummy logger classes...</echo>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" source="1.5"
            includeantruntime="false">
      <patternset refid="sources.dummyLoggers" />
    </javac>
  </target>
  
  <!-- ======================================================================
       Ontopia topic map realm
       ==================================================================== -->
  
  <!-- Patterns -->
  <patternset id="sources.topicmaprealm">
    <include name="net/ontopia/topicmaps/nav2/realm/*.java" />
  </patternset>
  
  <patternset id="classes.topicmaprealm">
    <include name="net/ontopia/topicmaps/nav2/realm/*.class" />
  </patternset>
  
  <target name="jar.topicmaprealm">
    <echo>Compiling topicmaprealm classes...</echo>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath" source="1.5"
            includeantruntime="false">
      <patternset refid="sources.topicmaprealm" />
    </javac>
    <echo>Building topicmaprealm jar file...</echo>
    <jar basedir="${build.classes}" jarfile="${build.jars}/ontopia-realm.jar">
      <patternset refid="classes.topicmaprealm" />
    </jar>
  </target>
  
  <!-- ======================================================================
       Posting online docs
       ======================================================================
       
       This target is used to produce a documentation bundle which can
       be uploaded to ontopia.net so that we have all the product
       documentation available online.
       
       The target will produce build/ontopia-docs.zip 
  -->
  
  <target name="doc.ontopia" depends="init">
    <echo>Generating docs in ${dist.path}/doc...</echo>
    
    <!-- Create doc directory -->
    <delete dir="${dist.path}/doc" />
    <mkdir dir="${dist.path}/doc" />
    
    <!-- Get javadoc -->
    <antcall inheritRefs="true" target="javadoc.ontopia" />
    <copy todir="${dist.path}/doc/api">
      <fileset dir="${build.javadoc}/ontopia" />
    </copy>
        
    <!-- (from dist.product.collect) -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/ontopia/whatsnew.xml" />
    </antcall>
    <copy file="${doc.path}/ontopia/whatsnew.xml.html" tofile="${dist.path}/doc/whatsnew.html" />
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/ontopia/startup.xml" />
    </antcall>
    <copy file="${doc.path}/ontopia/startup.xml.html" tofile="${dist.path}/doc/install.html" />
    
    <copy file="${doc.path}/ontopia/copyrights.txt" todir="${dist.path}/doc" />
    
    <copy todir="${dist.path}/doc/misc">
      <fileset dir="${doc.path}/ontopia">
        <patternset>
          <include name="*.gif" />
        </patternset>
        <patternset>
          <include name="*.png" />
        </patternset>
      </fileset>
    </copy>
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/misc" />
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/ltm/tutorial.xml" />
    </antcall>
    <copy file="${doc.path}/ltm/tutorial.xml.html" tofile="${dist.path}/doc/misc/ltm.html" />
    
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/rdf2tm/spec.xml" />
    </antcall>
    <copy file="${doc.path}/rdf2tm/spec.xml.html" tofile="${dist.path}/doc/misc/rdf2tm.html" />
    
    <!-- Copy stylesheets -->
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/misc" />
    
    <!-- Collect documentation -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc" />
    
    <!-- Generate index page -->
    <echo message="Generating HTML index page..." />
    <texen controlTemplate="onlineindex-control.vm"
           templatePath="${src.path}/dist/doc/" 
           outputFile="docindex.report"
           outputDirectory="${build.tmp}" 
           productVersion="Version ${dist.version}, builddate ${dist.date.full}"/>
    <copy file="${build.tmp}/docindex.html" overwrite="yes" tofile="${dist.path}/doc/index.html" />
    
    <!-- Copy license -->
    <copy file="${doc.path}/ontopia/license.txt" tofile="${dist.path}/doc/license.txt" overwrite="yes" />
    
    <!-- Get more component docs -->
    <antcall inheritRefs="true" target="dist.engine.collect" />
    <antcall inheritRefs="true" target="dist.query.collect" />
    <antcall inheritRefs="true" target="dist.fulltext.collect" />
    <!-- noop -->
    <antcall inheritRefs="true" target="dist.schema.collect" />
    <antcall inheritRefs="true" target="dist.webed.collect" />
    <antcall inheritRefs="true" target="dist.db2tm.collect" />
    
    <!-- (from dist.navigator.collect) -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/omnigator/user-guide.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/navigator/config.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/navigator/devguide.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/navigator/taglib-reference.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/navigator/userman.xml" />
    </antcall>
    
    <!-- Collect omnigator documentation -->
    <copy file="${doc.path}/navigator/config.xml.html" tofile="${dist.path}/doc/navigator/config.html" />
    <copy file="${doc.path}/navigator/devguide.xml.html" tofile="${dist.path}/doc/navigator/navguide.html" />
    <copy file="${doc.path}/navigator/taglib-reference.xml.html" tofile="${dist.path}/doc/navigator/tolog-taglib.html" />
    <copy file="${doc.path}/navigator/userman.xml.html" tofile="${dist.path}/doc/navigator/userman.html" />
    <copy todir="${dist.path}/doc/navigator">
      <fileset dir="${doc.path}/navigator">
        <patternset>
          <include name="*.png" />
        </patternset>
        <patternset>
          <include name="*.gif" />
        </patternset>
      </fileset>
    </copy>
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/navigator" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/navigator" />
    
    <!-- Copy the user guide to correct directory -->
    <mkdir dir="${dist.path}/doc/omnigator/" />
    <copy file="${doc.path}/omnigator/user-guide.xml.html" tofile="${dist.path}/doc/omnigator/userguide.html" />
    <copy todir="${dist.path}/doc/omnigator/graphics">
      <fileset dir="${doc.path}/omnigator/graphics" />
    </copy>
    <copy todir="${dist.path}/doc/omnigator">
      <fileset dir="${doc.path}/navigator">
        <patternset>
          <include name="*.png" />
        </patternset>
        <patternset>
          <include name="*.gif" />
        </patternset>
      </fileset>
    </copy>
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/omnigator" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/omnigator" />
    
    <!-- (from dist.rdbms.collect) -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/rdbms/install.xml" />
    </antcall>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/rdbms/devguide.xml" />
    </antcall>
    <mkdir dir="${dist.path}/doc/rdbms" />
    <copy file="${doc.path}/rdbms/install.xml.html" tofile="${dist.path}/doc/rdbms/install.html" />
    <copy file="${doc.path}/rdbms/devguide.xml.html" tofile="${dist.path}/doc/rdbms/devguide.html" />
    
    <copy file="${doc.path}/rdbms/RdbmsImport.java" todir="${dist.path}/doc/rdbms" />
    <copy file="${doc.path}/rdbms/RdbmsExport.java" todir="${dist.path}/doc/rdbms" />
    <copy file="${doc.path}/rdbms/RdbmsList.java" todir="${dist.path}/doc/rdbms" />
    
    <!-- Copy logo and stylesheet -->
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/rdbms" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/rdbms" />
    
    <!-- (from dist.viz.collect) -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/vizigator/user-guide.xml" />
    </antcall>
    
    <!-- Collect documentation -->
    <mkdir dir="${dist.path}/doc/vizigator" />
    <copy file="${doc.path}/vizigator/user-guide.xml.html" tofile="${dist.path}/doc/vizigator/userguide.html" />
    <copy todir="${dist.path}/doc/vizigator">
      <fileset dir="${doc.path}/vizigator">
        <patternset>
          <include name="*.gif" />
        </patternset>
        <patternset>
          <include name="*.png" />
        </patternset>
      </fileset>
    </copy>
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/vizigator" />
    <copy file="${doc.path}/stylesheets/whitepapers.css"
          todir="${dist.path}/doc/vizigator" />
    
    <!-- (from dist.viz.collect) -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/tmrap/devguide.xml" />
    </antcall>
    <copy file="${doc.path}/tmrap/devguide.xml.html" tofile="${dist.path}/doc/tmrap/dev-guide.html" />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/tmrap" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/tmrap" />

    <!-- (from dist.viz.collect) -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/vizigator/user-guide.xml" />
    </antcall>

    <!-- (from dist.classify.collect) -->
    <mkdir dir="${doc.path}/classify"/>
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/classify/devguide.xml" />
    </antcall>
    <copy file="${doc.path}/classify/devguide.xml.html" tofile="${dist.path}/doc/classify/dev-guide.html" />
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/classify" />
    <copy file="${doc.path}/stylesheets/whitepapers.css" todir="${dist.path}/doc/classify" />    
    
    <!-- Build Ontopoly documentation -->
    <antcall inheritRefs="true" target="makehtml">
      <param name="file" value="${doc.path}/ontopoly/user-guide.xml" />
    </antcall>
    <mkdir dir="${dist.path}/doc/ontopoly" />
    <mkdir dir="${dist.path}/doc/ontopoly/images" />
    <copy file="${doc.path}/ontopoly/user-guide.xml.html" tofile="${dist.path}/doc/ontopoly/userguide.html" />
    <copy todir="${dist.path}/doc/ontopoly/images">
      <fileset dir="${doc.path}/ontopoly/images">
        <patternset>
          <include name="*.gif" />
        </patternset>
        <patternset>
          <include name="*.png" />
        </patternset>
      </fileset>
    </copy>
    <copy file="${doc.path}/ontopia/logo.gif" todir="${dist.path}/doc/ontopoly" />
    <copy file="${doc.path}/stylesheets/whitepapers.css"
          todir="${dist.path}/doc/ontopoly" />

    <!-- finally, package it -->
    <zip destFile="${build.dists}/ontopia-docs.zip" duplicate="preserve">
      <zipfileset dir="${dist.path}">
        <include name="doc/**/*" />
      </zipfileset>
    </zip>    
  </target>
  
  <!-- ======================================================================
       Apache Ivy utilities
       ==================================================================== -->

  <target name="ivy.make-pom" depends="init">
    <ivy:makepom ivyfile="${basedir}/ivy.xml" pomfile="${basedir}/pom.xml">
     <mapping conf="build" scope="compile"/>
     <mapping conf="build" scope="runtime"/>
    </ivy:makepom>  
  </target>

  <target name="ivy.deploy-local" depends="init">
    <exec executable="mvn">
      <arg value="install:install-file" />
      <arg value="-DgroupId=net.ontopia" />
      <arg value="-DartifactId=ontopia-engine" />
      <arg value="-Dversion=${dist.version.major}.${dist.version.minor}.${dist.version.micro}-SNAPSHOT" />
      <arg value="-Dpackaging=jar" />
      <arg value="-Dfile=${basedir}/build/jars/ontopia.jar" />
      <arg value="-DpomFile=${basedir}/pom.xml" />
      <arg value="-DcreateChecksum=true" />
    </exec>
  </target>

</project>
