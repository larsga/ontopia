<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="ontopia" default="bootstrap" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <target name="generate-rdbms-schema">
    <java classname="net.ontopia.persistence.rdbms.DDLWriter" fork="true" classpathref="project.classpath">
      <arg value="${src.path}/dist/rdbms/rdbms-schema.xml" />
      <arg value="${database}" />
      <arg value="${platforms}" />
      <arg value="${dist.path}/rdbms/setup/${id}.create.sql" />
      <arg value="${dist.path}/rdbms/setup/${id}.drop.sql" />
    </java>
  </target>
  
  <!-- ======================================================================
       Unit tests
       ====================================================================== -->
  
  <target name="test" depends="init, download-xtm2, download-xtm21, download-tmxml, download-ctm, download-jtm">
    <property name="test.config" value="${test.path}/config/tests.xml" />
    <property name="test.name" value="complete-non-rdbms" />
    <echo>Using configuration file '${test.config}'.</echo>
    <echo>Tests: '${test.name}'. </echo>
    <java classname="net.ontopia.test.TestRunner" fork="true" classpathref="project.classpath.test">
      <jvmarg value="-Dnet.ontopia.xml.Slf4jSaxErrorHandler.ignoreNamespaceErrors=true" />
      <jvmarg value="-Dnet.ontopia.test.root=${test.path}" />
      <arg value="--loglevel=ERROR" />
      <arg value="${test.config}" />
      <arg value="${test.name}" />
    </java>
  </target>
  
  <!-- ======================================================================
       Ontopia distributions
       ==================================================================== -->
  
  <target name="check-jvm">
    <property name="jvm.version" value="1.5" />
    <java classname="net.ontopia.products.CheckJVMVersion" failonerror="true" classpathref="project.classpath">
      <arg value="${jvm.version}" />
    </java>
  </target>
  
  <target name="dist.ontopia.echo">
    <echo>Building ${dist.title}...</echo>
    <echo> - version is '${dist.version}'</echo>
    <echo> - compiler is '${build.compiler}'</echo>
    <echo> - jvm is '${ant.java.version}'</echo>
  </target>
  
  <!-- - - - Ontopia distribution  - - - - - - - - - - - - - - - - - - - - -->
  
  <target name="dist.ontopia" depends="init,check-jvm" description="builds the full ontopia distribution">
    
    <antcall inheritRefs="true" target="dist.ontopia.echo" />
    
    <!-- compile and build jar files -->
    <antcall inheritRefs="true" target="dist.jar.ontopia.body" />
    
    <!-- Clean distribution directory -->
    <delete dir="${build.tmp}" />
    <delete dir="${dist.path}" />
    <mkdir dir="${dist.path}" />
    
    <!-- Collect product structures -->
    <antcall inheritRefs="true" target="dist.product.collect" />
    <antcall inheritRefs="true" target="dist.engine.collect" />
    <antcall inheritRefs="true" target="dist.query.collect" />
    <antcall inheritRefs="true" target="dist.fulltext.collect" />
    <antcall inheritRefs="true" target="dist.schema.collect" />
    <antcall inheritRefs="true" target="dist.webed.collect" />
    <antcall inheritRefs="true" target="dist.navigator.collect" />
    <!-- viz and tmrap must be placed after this task -->
    <antcall inheritRefs="true" target="dist.db2tm.collect" />
    <antcall inheritRefs="true" target="dist.rdbms.collect" />
    <antcall inheritRefs="true" target="dist.classify.collect" />
    <antcall inheritRefs="true" target="dist.viz.collect" />
    <antcall inheritRefs="true" target="dist.tmrap.collect" />
    
    <!-- Collect product tests -->
    <antcall inheritRefs="true" target="dist.engine.test.collect" />
    <antcall inheritRefs="true" target="dist.navigator.test.collect" />
    <antcall inheritRefs="true" target="dist.fulltext.test.collect" />
    <antcall inheritRefs="true" target="dist.query.test.collect" />
    <antcall inheritRefs="true" target="dist.schema.test.collect" />
    <antcall inheritRefs="true" target="dist.webed.test.collect" />
    <antcall inheritRefs="true" target="dist.viz.test.collect" />
    <antcall inheritRefs="true" target="dist.db2tm.test.collect" />
    <antcall inheritRefs="true" target="dist.tmrap.test.collect" />
    <antcall inheritRefs="true" target="dist.rdbms.test.collect" />
    
    <!-- Test configuration -->
    <copy file="${test.path}/config/tests.xml" todir="${dist.path}/tests/test-data" />
    <copy file="${src.path}/dist/tests/tests-ontopia.xml" tofile="${dist.path}/tests/test-data/tests-ontopia.xml" />
    
    <copy file="${build.jars}/${dist.name}.jar" todir="${dist.path}/lib" />
    <copy file="${build.jars}/${dist.name}-tests.jar" todir="${dist.path}/lib" />
    <copy file="${build.jars}/${dist.name}.jar" todir="${dist.path}/apache-tomcat/common/lib" />
    
    <!-- Copy templates -->
    <mkdir dir="${dist.path}/config/vm-templates" />
    <copy todir="${dist.path}/config/vm-templates">
      <fileset dir="${src.path}/webapps/webedtest/WEB-INF/templates" />
    </copy>
    
    <echo>Generating jar digests...</echo>
    <java classname="net.ontopia.product.JarDigests" fork="true" classpathref="project.classpath">
      <arg value="${dist.path}/lib/" />
      <arg value=".*\.jar" />
      <arg value="${dist.path}/lib/digests.txt" />
    </java>
    
    <!-- Package the distribution -->
    <zip destFile="${build.dists}/${dist.zipfile}" duplicate="preserve">
      <zipfileset dir="${build.dists}" filemode="755" includes="${dist.dir}/apache-tomcat/bin/*.sh" />
      <zipfileset dir="${build.dists}" filemode="755" includes="${dist.dir}/tests/*.sh" />
      <zipfileset dir="${build.dists}">
        <include name="${dist.dir}/**/*" />
        <exclude name="${dist.dir}/apache-tomcat/bin/*.sh" />
        <exclude name="${dist.dir}/tests/*.sh" />
      </zipfileset>
    </zip>
  </target>
  
  <target name="dist.jar.ontopia.body" depends="check-jvm,prepare.product.class,clean.classes,compile.ontopia,compile.ontopia.test,jar.ontopia.test,jar.ontopia" description="builds the ontopia.jar file">
  </target>
  
  <target name="dist.jar.ontopia" depends="init,dist.jar.ontopia.body" description="builds the ontopia.jar file">
  </target>
  
  <target name="jar.ontopia">
    <property name="dist.name" value="ontopia" />
    <delete file="${build.jars}/${dist.name}.jar" />
    <jar basedir="${build.classes}" jarfile="${build.jars}/${dist.name}.jar" manifest="${src.path}/dist/manifests/manifest-ontopia.mf">
      <patternset refid="classes.engine" />
      <patternset refid="classes.tmapi" />
      <patternset refid="classes.navigator" />
      <patternset refid="classes.fulltext" />
      <patternset refid="classes.query" />
      <patternset refid="classes.schema" />
      <patternset refid="classes.webed" />
      <patternset refid="classes.viz" />
      <patternset refid="images.viz" />
      <patternset refid="resources.viz" />
      <patternset refid="classes.db2tm" />
      <patternset refid="classes.rdbms" />
      <patternset refid="classes.classify" />
    </jar>
  </target>
  
  <!-- Makes sure that all neccessary classes are compiled before packaging ontopia.jar -->
  <target name="compile.ontopia">
    <patternset id="sources.ontopia.core">
      <patternset refid="sources.engine" />
      <patternset refid="sources.tmapi" />
      <patternset refid="sources.query" />
      <patternset refid="sources.schema" />
      <patternset refid="sources.fulltext" />
      <patternset refid="sources.rdbms" />
    </patternset>
    
    <patternset id="sources.ontopia.aux">
      <patternset refid="sources.db2tm" />
      <patternset refid="sources.viz" />
      <patternset refid="sources.navigator" />
      <patternset refid="sources.webed" />
      <patternset refid="sources.classify" />
    </patternset>
    
    <echo>Compiling net.ontopia classes...</echo>
    <javac srcdir="${java.path}" 
            destdir="${build.classes}" 
            optimize="${optimize}" 
            deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            includeantruntime="false" 
            classpathref="project.classpath" source="1.5">
      <patternset refid="sources.ontopia.core" />
    </javac>
    <javac srcdir="${java.path}" 
            destdir="${build.classes}" 
            optimize="${optimize}" 
            deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            includeantruntime="false" 
            classpathref="project.classpath" source="1.5">
      <patternset refid="sources.ontopia.aux" />
    </javac>
    <echo>Copying RelaxNG schemas</echo>
    <copy file="${java.path}/net/ontopia/topicmaps/xml/tmxml.rnc" tofile="${build.classes}/net/ontopia/topicmaps/xml/tmxml.rnc" overwrite="yes" />
    <copy file="${java.path}/net/ontopia/topicmaps/db2tm/db2tm.rnc" tofile="${build.classes}/net/ontopia/topicmaps/db2tm/db2tm.rnc" overwrite="yes" />
    
    <echo>Copying TLDs to META-INF...</echo>
    <copy todir="${build.classes}/META-INF/" overwrite="yes">
      <fileset dir="${src.path}/webapps/webedtest/WEB-INF/jsp/">
        <include name="*.tld" />
      </fileset>
    </copy>
    
    <echo>Copying webed resources...</echo>
    <copy todir="${build.classes}/" overwrite="yes">
      <fileset dir="${basedir}/src/webapps/webedtest/WEB-INF/templates/">
        <include name="*.vm" />
      </fileset>
    </copy>
    
    <echo>Copying rdbms resources...</echo>
    <copy file="${java.path}/net/ontopia/topicmaps/impl/rdbms/config/mapping.xml" tofile="${build.classes}/net/ontopia/topicmaps/impl/rdbms/config/mapping.xml" overwrite="yes" />
    <copy file="${java.path}/net/ontopia/topicmaps/impl/rdbms/config/queries.xml" tofile="${build.classes}/net/ontopia/topicmaps/impl/rdbms/config/queries.xml" overwrite="yes" />
    
    <echo>Copying vizigator resources ... </echo>
    <copy file="${java.path}/net/ontopia/topicmaps/viz/logo.gif" tofile="${build.classes}/net/ontopia/topicmaps/viz/logo.gif" />
    <copy todir="${build.classes}/net/ontopia/topicmaps/viz/" overwrite="yes">
      <fileset dir="${java.path}/net/ontopia/topicmaps/viz/">
        <patternset>
          <include name="messages.properties" />
          <include name="messages_*.properties" />
        </patternset>
      </fileset>
    </copy>
    
    <echo>Copying classify resources ... </echo>
    <copy todir="${build.classes}/net/ontopia/topicmaps/classify/lang" overwrite="yes">
      <fileset dir="${java.path}/net/ontopia/topicmaps/classify/lang">
        <include name="*" />
      </fileset>
    </copy>
    
  </target>
  
  <target name="compile.ontopia.test">
    <echo>Compiling test cases for net.ontopia...</echo>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="false" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath" source="1.5"
            includeantruntime="false">
      <patternset refid="sources.test.ontopia.core" />
    </javac>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="false" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" 
            classpathref="project.classpath" source="1.5"
            includeantruntime="false">
      <patternset refid="sources.test.ontopia.aux" />
    </javac>
    <!-- copy db2tm mapping files -->
    <copy todir="${build.classes}/net/ontopia/topicmaps/db2tm/test" overwrite="yes">
      <fileset dir="${java.path}/net/ontopia/topicmaps/db2tm/test">
        <include name="*.xml" />
      </fileset>
    </copy>
  </target>
  
  <target name="jar.ontopia.test">
    <property name="dist.name" value="ontopia" />
    <delete file="${build.jars}/${dist.name}-tests.jar" />
    <jar basedir="${build.classes}" jarfile="${build.jars}/${dist.name}-tests.jar" manifest="${src.path}/dist/manifests/manifest-ontopia-tests.mf">
      <patternset refid="classes.test.engine" />
      <patternset refid="classes.test.tmapi" />
      <patternset refid="classes.test.navigator" />
      <patternset refid="classes.test.fulltext" />
      <patternset refid="classes.test.query" />
      <patternset refid="classes.test.schema" />
      <patternset refid="classes.test.webed" />
      <patternset refid="classes.test.db2tm" />
      <patternset refid="classes.test.rdbms" />
      <patternset refid="classes.test.classify" />
      <patternset refid="classes.test.viz" />
    </jar>
  </target>
  
  <target name="dist.engine.test.collect" depends="download-xtm2, download-xtm21, download-tmxml, download-ctm, download-jtm">
    
    <!-- Test data -->
    <copy todir="${dist.path}/tests/test-data/canonical/baseline">
      <fileset dir="${test.path}/canonical/baseline" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/canonical/in">
      <fileset dir="${test.path}/canonical/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/canonical/extra">
      <fileset dir="${test.path}/canonical/extra" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/canonical/errors">
      <fileset dir="${test.path}/canonical/errors" />
    </copy>
    <mkdir dir="${dist.path}/tests/test-data/canonical/out" />
    
    <copy todir="${dist.path}/tests/test-data/merge/baseline">
      <fileset dir="${test.path}/merge/baseline" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/merge/in">
      <fileset dir="${test.path}/merge/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/metadata">
      <fileset dir="${test.path}/metadata" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/various">
      <fileset dir="${test.path}/various" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/ltm/baseline">
      <fileset dir="${test.path}/ltm/baseline" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/ltm/in">
      <fileset dir="${test.path}/ltm/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/ltm/extra">
      <fileset dir="${test.path}/ltm/extra" />
    </copy>
    
    <copy todir="${dist.path}/tests/test-data/rdf/baseline">
      <fileset dir="${test.path}/rdf/baseline" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/rdf/err">
      <fileset dir="${test.path}/rdf/err" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/rdf/in">
      <fileset dir="${test.path}/rdf/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/rdf/various">
      <fileset dir="${test.path}/rdf/various" />
    </copy>
    <mkdir dir="${dist.path}/tests/test-data/rdf/out" />
    
    <copy todir="${dist.path}/tests/test-data/tm2rdf/in">
      <fileset dir="${test.path}/rdf/in" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/tm2rdf/baseline">
      <fileset dir="${test.path}/tm2rdf/baseline" />
    </copy>
    <mkdir dir="${dist.path}/tests/test-data/rm2rdf/tmp" />
    
    <copy todir="${dist.path}/tests/test-data/tmrap">
      <fileset dir="${test.path}/tmrap" />
    </copy>
    
    <copy todir="${dist.path}/tests/test-data/tmsync">
      <fileset dir="${test.path}/tmsync" />
    </copy>
    
    <copy todir="${dist.path}/tests/test-data/xtm2">
      <fileset dir="${test.path}/xtm2" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/xtm21">
      <fileset dir="${test.path}/xtm21" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/tmxml">
      <fileset dir="${test.path}/tmxml" />
    </copy>
    <copy todir="${dist.path}/tests/test-data/cxtm">
      <fileset dir="${test.path}/cxtm" />
    </copy>
    
  </target>
  
  <!-- - - - Collect navigator runtime components  - - - - - - - - - - - - - -->
  
  <target name="dist.navigator.collect">
    <echo>Collecting navigator runtime components...</echo>
    
    <!-- Build Ontopia realm -->
    <antcall inheritRefs="true" target="jar.topicmaprealm" />
    <copy file="${build.jars}/ontopia-realm.jar" tofile="${dist.path}/apache-tomcat/server/lib/ontopia-realm.jar" overwrite="yes" />
    
    <!-- Collect omnigator web application -->
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator">
      <fileset dir="${src.path}/webapps/omnigator" />
    </copy>
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/work" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/classes" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/lib" />
    <move file="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/config/tm-sources.xml" tofile="${dist.path}/apache-tomcat/common/classes/tm-sources.xml" />
    <!-- Delete JSP example directory -->
    <delete dir="${dist.path}/apache-tomcat/webapps/omnigator/framework-examples" />
    
    <!-- Clear the plugins directory -->
    <delete dir="${dist.path}/apache-tomcat/webapps/omnigator/plugins" />
    <!-- Copy plugins -->
    <mkdir dir="${dist.path}/apache-tomcat/webapps/omnigator/plugins" />
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/plugins">
      <fileset dir="${src.path}/webapps/omnigator/plugins">
        <include name="customise/*/**" />
        <include name="edit/*/**" />
        <include name="export/*/**" />
        <include name="feedback/*/**" />
        <include name="filter/*/**" />
        <include name="fulltext/*/**" />
        <include name="hello/*/**" />
        <include name="ltm/*/**" />
        <include name="merge/*/**" />
        <include name="plugins/*/**" />
        <include name="rdf2tm/*/**" />
        <include name="samples/*/**" />
        <include name="statistics/*/**" />
        <include name="tmlink/*/**" />
        <include name="validator/*/**" />
        <include name="viz/*/**" />
        <include name="query/*/**" />
      </fileset>
    </copy>
    
    <!-- Copy example topic maps to the web application documentation dir -->
    <copy file="${topicmaps.path}/ItalianOpera.ltm" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs/navigator" />
    <copy file="${topicmaps.path}/i18n.ltm" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs" />
    <copy file="${topicmaps.path}/jill.xtm" todir="${dist.path}/apache-tomcat/webapps/omnigator/docs" />
    
    <!-- Replace topic map files which will be used by omnigator -->
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps" />
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps">
      <fileset dir="${topicmaps.path}">
        <!-- omnigator -->
        <include name="KanzakisConcerts.rdf" />
        <include name="MyMusic.xtm" />
        <include name="dc.ltmm" />
        <include name="dc.xtmm" />
        <include name="i18n.ltm" />
        <include name="i18n.ltm.osl" />
        <include name="jill.xtm" />
        <include name="jill.xtm.osl" />
        <include name="mapping.rdff" />
        <include name="ItalianOpera.ltm" />
        <include name="ItalianOpera.ltm.osl" />
        <include name="pokemon.ltm" />
        <include name="support-kb.ltm" />
        <include name="tm-standards.xtm" />
        <include name="xmltools-tm.xtm" />
        <include name="xmltools-tm.xtm.osl" />
        <!-- ontopoly -->
        <include name="ADL-FTT.xtm" />
        <include name="GCL-2-1.xtm" />
        <include name="JillsMusic.xtm" />
        <include name="KevinsPlan.xtm" />
        <include name="MyConcerts.xtm" />
        <include name="MyPlan.xtm" />
        <include name="MyThesaurus.xtm" />
        <include name="TapsasConcerts.xtm" />
      </fileset>
    </copy>
    <delete file="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps/tasks.ltm" />
    <move todir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/schemas">
      <fileset dir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps">
        <include name="*.osl" />
      </fileset>
    </move>
    
    <!-- mondial.xtm  -->
    <gunzip src="${topicmaps.path}/mondial.xtm.gz" dest="${topicmaps.path}/mondial.xtm" />
    <copy file="${topicmaps.path}/mondial.xtm" todir="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps" overwrite="yes" />
    
    <!-- Insert Versionnumber and Builddate for display into omnigator -->
    <replace file="${dist.path}/apache-tomcat/webapps/omnigator/fragments/tagline-header.jsp" token="@VERSION@" value="${dist.version}" />
    <replace file="${dist.path}/apache-tomcat/webapps/omnigator/fragments/tagline-header.jsp" token="@DATE@" value="${build.date}" />
    
    <!-- Add i18n web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.i18n" />
    
    <!-- Add xmltools web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.xmltools" />
    
    <!-- Add manage web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.manage" />
    
    <!-- Add ontopoly web application -->
    <antcall inheritRefs="true" target="dist.ontopia.webapp.ontopoly" />
    
  </target>

  <target name="delete.tomcat.webapps" unless="keep.tomcat.webapps">
    <echo>Deleting tomcat web applications</echo>
    <delete quiet="true" dir="${dist.path}/apache-tomcat/server/webapps/manager" />
    <delete quiet="true" file="${dist.path}/apache-tomcat/conf/Catalina/localhost/manager.xml" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/webdav" />
    <delete quiet="true" dir="${dist.path}/apache-tomcat/webapps/tomcat-docs" />
  </target>
  
  <target name="dist.navigator.test.collect">
    
    <!-- Navigator test files and configuration -->
    <copy todir="${dist.path}/tests/test-data/nav2">
      <fileset dir="${test.path}/nav2" />
    </copy>
    
    <copy todir="${dist.path}/tests/test-data/ontopoly">
      <fileset dir="${test.path}/ontopoly" />
    </copy>
    
  </target>
  
  <!-- - - - Collect fulltext components - - - - - - - - - - - - - - - - - - -->
  <target name="dist.fulltext.collect">
    
  </target>
  
  <target name="dist.fulltext.test.collect">
    
  </target>
  
  <target name="dist.db2tm.test.collect">
    
    <copy todir="${dist.path}/tests/test-data/db2tm">
      <fileset dir="${test.path}/db2tm">
        <exclude name="out" />
      </fileset>
    </copy>
    
  </target>
  
  <!-- - - - Collect tmrap components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.tmrap.collect">
    
    <unzip src="${src.path}/webapps/tmrap/tmrap.zip" dest="${dist.path}/apache-tomcat/webapps/" />
    
  </target>
  
  <target name="dist.tmrap.test.collect">
    
  </target>
  
  <!-- - - - Collect rdbms components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.rdbms.collect">
    
    <!-- Collect sample database property -->
    <mkdir dir="${dist.path}/rdbms/config" />
    <copy todir="${dist.path}/rdbms/config/">
      <fileset dir="${src.path}/dist/rdbms/">
        <include name="db.oracle8.props" />
        <include name="db.oracle9i.props" />
        <include name="db.oracle10g.props" />
        <include name="db.postgresql.props" />
        <include name="db.sqlserver.props" />
        <include name="db.mysql.props" />
        <include name="db.h2.props" />
      </fileset>
    </copy>
    
    <!-- Collection clustering configuration -->
    <mkdir dir="${dist.path}/rdbms/clustering" />
    <copy file="${src.path}/dist/rdbms/ontopia-terracotta.xml" todir="${dist.path}/rdbms/clustering" />
    
  </target>
  
  <target name="dist.rdbms.test.collect">
    
  </target>
  
  <target name="dist.schema.test.collect">
    
    <!-- Test data -->
    <copy todir="${dist.path}/tests/test-data/schema">
      <fileset dir="${test.path}/schema" />
    </copy>
    
  </target>
  
  <target name="dist.query.test.collect">
    
    <!-- Test data -->
    <copy todir="${dist.path}/tests/test-data/query">
      <fileset dir="${test.path}/query" />
    </copy>
    
  </target>
  
  <target name="dist.webed.test.collect">
    
    <!-- Test data -->
    <copy todir="${dist.path}/tests/test-data/webed">
      <fileset dir="${test.path}/webed" />
    </copy>
    
  </target>
  
  <!-- - - - Collect viz components  - - - - - - - - - - - - - - - - - - - -->
  <target name="dist.viz.collect">
    
    <antcall inheritRefs="true" target="jar.vizlet" />
    
    <!-- Copy jar-files -->
    <copy todir="${dist.path}/apache-tomcat/webapps/omnigator/plugins/viz" file="${build.jars}/ontopia-vizlet.jar" overwrite="yes" />
    
    <copy file="${build.jars}/ontopia-vizlet.jar" tofile="${dist.path}/extras/ontopia-vizlet.jar" />
    <copy file="${build.jars}/signed-vizlet.jar" tofile="${dist.path}/extras/signed-vizlet.jar" />
    
    <!-- VizPlugin configurations -->
    <property name="vizcfg" value="${dist.path}/apache-tomcat/webapps/omnigator/WEB-INF/topicmaps/" />
    <copy file="${topicmaps.path}/i18n.ltm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/mondial.xtm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/tm-standards.xtm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/ItalianOpera.ltm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/xmltools-tm.xtm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/KanzakisConcerts.rdf.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/pokemon.ltm.viz" todir="${vizcfg}" />
    <copy file="${topicmaps.path}/support-kb.ltm.viz" todir="${vizcfg}" />
    
  </target>
  
  <target name="dist.viz.test.collect">
  </target>
  
  <!-- ======================================================================
       Dummy logger classes - used by vizlet
       ==================================================================== -->
  
  <patternset id="sources.dummyLoggers">
    <include name="org/apache/log4j/*.java" />
    <include name="org/apache/log4j/spi/*.java" />
    <include name="org/slf4j/*.java" />
  </patternset>
  
  <patternset id="classes.dummyLoggers">
    <include name="org/apache/log4j/*.class" />
    <include name="org/apache/log4j/spi/*.class" />
    <include name="org/slf4j/*.class" />
  </patternset>
  
  <target name="compile.dummyLoggers">
    <echo>Compiling dummy logger classes...</echo>
    <javac srcdir="${java.path}" destdir="${build.classes}" 
            optimize="${optimize}" deprecation="${deprecation}" 
            debug="${debug}" debuglevel="${debuglevel}" source="1.5"
            includeantruntime="false">
      <patternset refid="sources.dummyLoggers" />
    </javac>
  </target>

  <!-- ======================================================================
       Posting online docs
       ======================================================================
       
       This target is used to produce a documentation bundle which can
       be uploaded to ontopia.net so that we have all the product
       documentation available online.
       
       The target will produce build/ontopia-docs.zip 
  -->
  
  <target name="doc.ontopia" depends="init">
    <echo>Generating docs in ${dist.path}/doc...</echo>
    
    <!-- Create doc directory -->
    <delete dir="${dist.path}/doc" />
    <mkdir dir="${dist.path}/doc" />
    
    <!-- finally, package it -->
    <zip destFile="${build.dists}/ontopia-docs.zip" duplicate="preserve">
      <zipfileset dir="${dist.path}">
        <include name="doc/**/*" />
      </zipfileset>
    </zip>    
  </target>
  
  <!-- ======================================================================
       Apache Ivy utilities
       ==================================================================== -->

  <target name="ivy.make-pom" depends="init">
    <ivy:makepom ivyfile="${basedir}/ivy.xml" pomfile="${basedir}/pom.xml">
     <mapping conf="build" scope="compile"/>
     <mapping conf="build" scope="runtime"/>
    </ivy:makepom>  
  </target>

  <target name="ivy.deploy-local" depends="init">
    <exec executable="mvn">
      <arg value="install:install-file" />
      <arg value="-DgroupId=net.ontopia" />
      <arg value="-DartifactId=ontopia-engine" />
      <arg value="-Dversion=${dist.version.major}.${dist.version.minor}.${dist.version.micro}-SNAPSHOT" />
      <arg value="-Dpackaging=jar" />
      <arg value="-Dfile=${basedir}/build/jars/ontopia.jar" />
      <arg value="-DpomFile=${basedir}/pom.xml" />
      <arg value="-DcreateChecksum=true" />
    </exec>
  </target>

</project>
