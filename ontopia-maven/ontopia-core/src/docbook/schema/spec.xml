<?xml version="1.0" encoding="iso-8859-1"?>

<!-- **********************************************************************
     WARNING: This file was generated from schemaspec-src.xml 
     DO NOT modify it; modify schemaspec-src.xml instead 
**********************************************************************-->



<!--DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1//EN" ""-->
<article>
<title>The Ontopia Schema Language</title>
<subtitle>Reference Specification</subtitle>

<articleinfo>
<author>
<affiliation>Ontopia</affiliation>
</author>
<pubdate>$Date: 2008/06/13 12:06:19 $</pubdate>
<releaseinfo>5.0 ($Revision: 1.20 $)</releaseinfo>

<abstract>
<para>
This document is the specification of the Ontopia Schema Language,
providing an exhaustive reference documenting all features of the
language. For an introduction to the schema language, see the schema
tutorial.
</para>
</abstract>
</articleinfo>

<section>
<title>Introduction</title>

<para>
The Ontopia Schema Language uses an XML syntax defined in a DTD to
specify schemas. Schemas written in the language consist of
definitions of classes of topics and associations, defining the
allowed characteristics of each. Validating a topic map against a
schema is done by finding the class definition for each topic and
association, and verifying that the instance matches the class
definition. 
</para>

<para>
The Ontopia Schema Language has been designed to have a minimal number
of features and a minimum of expressive power. We expect to extend its
feature set according to user demand, and eventually to replace it
with the Topic Map Constraint Language (TMCL) currently being
developed within ISO. We have decided not to implement the TMCL before
it is finished in order to have a stable schema language as the basis
for our product suite.
</para>

<para>
The Ontopia Schema Language is intended to support many functions
within topic map projects, the most important of which are:
</para>

<itemizedlist>
<listitem>
<para>validation of the structure of topic map instances,</para>
</listitem>
<listitem>
<para>documentation of the structure of topic maps, and</para>
</listitem>
<listitem>
<para>guidance of topic map editing applications, in order to make
topic map editing easier and more convenient.</para>
</listitem>
</itemizedlist>
</section>

<section>
<title>High-level elements</title>

<para>
This section defines the semantics of the high-level elements of the
Ontopia Schema Language, element by element.
</para>

<section>
<title>The <symbol>tm-schema</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>The container element for the schema.</entry></row>
<row><entry>Content model:</entry>
     <entry>(ruleset | topic | association)* </entry></row>
<row><entry>Parents:</entry>
     <entry>None</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>tm-schema</symbol> element must be the document element of
all topic map schemas. It has no special semantics, but merely acts as
a container for the topic map schema.
</para>

<para>
The <symbol>tm-schema</symbol> element has a single attribute:
<symbol>match</symbol>, which can have the values
<symbol>loose</symbol> and <symbol>strict</symbol>. When doing loose
matching, topics and associations which match none of the specified
classes are accepted without complaint. When doing strict matching,
such topics and associations are rejected. The default is loose
matching.
</para>

<para>
The allowed children of <symbol>tm-schema</symbol> elements are
<symbol>ruleset</symbol>, <symbol>topic</symbol>, and
<symbol>association</symbol> elements, in any order.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>match</entry>
       <entry>loose, strict</entry>
       <entry>#DEFAULT</entry>
       <entry>loose</entry>
       <entry>Controls whether the schema uses loose or strict
      matching.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>ruleset</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Contains a set of reusable named
    constraints.</entry></row>
<row><entry>Content model:</entry>
     <entry>(ruleref* , (baseName | occurrence | playing)* ) </entry></row>
<row><entry>Parents:</entry>
     <entry>tm-schema</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>ruleset</symbol> element is used to specify a set of
constraints which can be reused by any topic class definition. Its
intent is to allow the specification of reused rules in a single
place, improving maintainability and readability of topic map
schemas.
</para>

<para>
The <symbol>ruleset</symbol> element must have one, and only one
attribute, named <symbol>id</symbol>, and containing a unique
identifier for the rule set, allowing it to be referenced from topic
classes.
</para>

<para>
The <symbol>ruleset</symbol> element may contain any number of
<symbol>ruleref</symbol> elements, followed by any number of
<symbol>baseName</symbol>, <symbol>occurrence</symbol>, and
<symbol>playing</symbol> elements.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>id</entry>
       <entry>ID</entry>
       <entry>#REQUIRED</entry>
       <entry>&#160;</entry>
       <entry>The ID of the ruleset, by which it may be
      referred to.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>topic</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Defines a topic class.</entry></row>
<row><entry>Content model:</entry>
     <entry>(instanceOf , otherClass* , (ruleref | superclass)* , (baseName | occurrence | playing)* ) </entry></row>
<row><entry>Parents:</entry>
     <entry>tm-schema</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>topic</symbol> element defines the constraints applying to
topics belonging to a particular class. The element may contain
constraints on the characteristics on instances of the class, as well
as other kinds of restrictions.
</para>

<para>
Each <symbol>topic</symbol> element must have an
<symbol>instanceOf</symbol> child, specifying what class of topic is
constrained by this rule. Only topics which match this
<symbol>instanceOf</symbol> element must follow the constraints
specified by this <symbol>topic</symbol> element.
</para>

<para>
<symbol>topic</symbol> elements may have a <symbol>match</symbol>
attribute, which may be set to <symbol>loose</symbol> or
<symbol>strict</symbol>. If set to <symbol>loose</symbol> topic names,
occurrences, and roles not matching any of the constraints in the
topic class definition are accepted. If set to <symbol>strict</symbol>
such characteristics will be rejected. The default is
<symbol>strict</symbol> matching.
</para>

<para>
The <symbol>otherClass</symbol> elements can be used to specify what
other classes instances of this topic class may be instances of. If
the element is not present instances of this class may not be
instances of any other class. If present, instances of this class may
only be instances of the classes specified by the element, and not any
other classes. <remark>Need a separate section, I guess.</remark>
</para>

<para>
The <symbol>baseName</symbol>, <symbol>occurrence</symbol>, and
<symbol>playing</symbol> elements specify what characteristics
instances of this class may have.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>id</entry>
       <entry>ID</entry>
       <entry>#IMPLIED</entry>
       <entry>&#160;</entry>
       <entry>The ID of the class by which it may be referred
      to.</entry></row>
  <row><entry>match</entry>
       <entry>loose, strict</entry>
       <entry>#DEFAULT</entry>
       <entry>strict</entry>
       <entry>Whether matching of constraints is loose or
      strict.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>baseName</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>A constraint on the topic names of a
    topic.</entry></row>
<row><entry>Content model:</entry>
     <entry>(scope , variant*) </entry></row>
<row><entry>Parents:</entry>
     <entry>topic, ruleset</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
<symbol>baseName</symbol> elements constrain the topic names a topic
may have. If a topic name has scope matching that specified in the
<symbol>scope</symbol> child element of a <symbol>baseName</symbol>
element it is validated against that <symbol>baseName</symbol> rule.
</para>

<para>
<symbol>baseName</symbol> elements may have <symbol>min</symbol> and
<symbol>max</symbol> attributes specifying the minimum and maximum
number of matching topic names each topic may have. The default is that
any number of matches is allowed.
</para>

<para>
The <symbol>variant</symbol> child element is used to specify what
variants a topic name may have. Matching of variant names is always
strict, so variant names that do not match a rule in the schema are
rejected. 
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>max</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>Inf</entry>
       <entry>The maximum number of matches allowed on this
      constraint for each instance of the class.</entry></row>
  <row><entry>min</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>0</entry>
       <entry>The minimum number of matches allowed on this
      constraint for each instance of the class.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>variant</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>A constraint on the variant names of a base
    name.</entry></row>
<row><entry>Content model:</entry>
     <entry>(scope) </entry></row>
<row><entry>Parents:</entry>
     <entry>baseName</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>variant</symbol> element is used to constrain the
allowed variants of topic names.  If a variant name has scope matching
that specified in the <symbol>scope</symbol> child element of a
<symbol>variant</symbol> element it is validated against that
<symbol>variant</symbol> rule.
</para>

<para>
<symbol>variant</symbol> elements may have <symbol>min</symbol>
and <symbol>max</symbol> attributes specifying the minimum and maximum
number of matching variant names each topic name may have. The default
is that any number of matches is allowed.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>max</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>Inf</entry>
       <entry>The maximum number of matches allowed on this
      constraint for each instance of the class.</entry></row>
  <row><entry>min</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>0</entry>
       <entry>The minimum number of matches allowed on this
      constraint for each instance of the class.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>occurrence</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>A constraint on the occurrences of a
    topic.</entry></row>
<row><entry>Content model:</entry>
     <entry>(instanceOf , scope?) </entry></row>
<row><entry>Parents:</entry>
     <entry>topic, ruleset</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>occurrence</symbol> element is used to constrain the
possible occurrences a topic may have. If an occurrence has a type
matching that specified by the <symbol>instanceOf</symbol> child it is
validated against that <symbol>occurrence</symbol> rule.
</para>

<para>
The <symbol>occurrence</symbol> element may also have
<symbol>min</symbol> and <symbol>max</symbol> attributes. The
<symbol>internal</symbol> attribute may be set to <symbol>yes</symbol>
(meaning that matching occurrences must be internal),
<symbol>no</symbol> (meaning that matching occurrences must be
external), or <symbol>either</symbol>, meaning that they may be either.
</para>

<para>
If the <symbol>occurrence</symbol> element has a
<symbol>scope</symbol> child element the scope of each occurrence is
matched against that specified in the <symbol>scope</symbol> child.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>internal</entry>
       <entry>yes, no, either</entry>
       <entry>#DEFAULT</entry>
       <entry>either</entry>
       <entry>Whether the occurrence must be internal or
      external, or whether it can be both.</entry></row>
  <row><entry>max</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>Inf</entry>
       <entry>The maximum number of matches allowed on this
      constraint for each instance of the class.</entry></row>
  <row><entry>min</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>0</entry>
       <entry>The minimum number of matches allowed on this
      constraint for each instance of the class.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>playing</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Defines a constraint on the roles a topic may play
    in associations.</entry></row>
<row><entry>Content model:</entry>
     <entry>(instanceOf , in?) </entry></row>
<row><entry>Parents:</entry>
     <entry>topic, ruleset</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>playing</symbol> element is used to constrain what roles a
topic may play in associations. If an association role has a type
matching that specified in the <symbol>instanceOf</symbol> child it is
validated against the <symbol>playing</symbol> rule.
</para>

<para>
The <symbol>playing</symbol> element may have <symbol>min</symbol> and
<symbol>max</symbol> attributes constraining the cardinality of
matching association roles.
</para>

<para>
The <symbol>playing</symbol> element may have an <symbol>in</symbol>
child, which specifies what types of associations the association
roles may be part of. The <symbol>in</symbol> element may contain any
number of <symbol>instanceOf</symbol> elements. As long as the
containing association matches one of those elements the association
role is accepted.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>max</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>Inf</entry>
       <entry>The maximum number of matches allowed on this
      constraint for each instance of the class.</entry></row>
  <row><entry>min</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>0</entry>
       <entry>The minimum number of matches allowed on this
      constraint for each instance of the class.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>association</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Defines an association class.</entry></row>
<row><entry>Content model:</entry>
     <entry>(instanceOf , scope? , role+) </entry></row>
<row><entry>Parents:</entry>
     <entry>tm-schema</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>association</symbol> element is used to define the
structure of a class of associations. Any association which matches
the <symbol>instanceOf</symbol> child of an
<symbol>association</symbol> element is validated against the rule
specified by that element.
</para>

<para>
The <symbol>scope</symbol> element can be used to define what scopes
are allowed for associations of this class. If the element is not
present, all scopes are allowed. If present, the scope of all
associations must match that specified.
</para>

<para>
The association roles in the association will be validated against the
<symbol>role</symbol> children of the <symbol>association</symbol>
element. Roles that do not match any <symbol>role</symbol> element
will be rejected.
</para>

<para>The <symbol>association</symbol> element has no attributes.</para>

</section>


<section>
<title>The <symbol>role</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Contains a constraint on the association roles
    in an association.</entry></row>
<row><entry>Content model:</entry>
     <entry>(instanceOf , player*) </entry></row>
<row><entry>Parents:</entry>
     <entry>association</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>role</symbol> element is used to constrain the association
roles that may appear inside an association. The
<symbol>instanceOf</symbol> child is used to specify the type matched
by the <symbol>role</symbol> element, and all association roles that
match the <symbol>instanceOf</symbol> element will be matched against
the <symbol>role</symbol> element.
</para>

<para>
The <symbol>role</symbol> element may have <symbol>min</symbol> and
<symbol>max</symbol> attributes, which specify the number of matches
that are allowed within each association.
</para>

<para>
The <symbol>player</symbol> child element is used to specify what
classes of topics are allowed to play this role in an association.
Topics are matched against the <symbol>player</symbol> element in the
same way they are matched against the <symbol>instanceOf</symbol>
element. (See the section on that element for details.) To specify
that instances of more than one class may play a role, use more than
one <symbol>player</symbol> element.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>max</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>Inf</entry>
       <entry>The maximum number of matches allowed on this
      constraint for each instance of the class.</entry></row>
  <row><entry>min</entry>
       <entry>CDATA</entry>
       <entry>#DEFAULT</entry>
       <entry>0</entry>
       <entry>The minimum number of matches allowed on this
      constraint for each instance of the class.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>
</section>


<section>
<title>Low-level elements</title>

<para>
This section defines the semantics of the low-level elements of the
Ontopia Schema Language.
</para>

<section>
<title>The <symbol>ruleref</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>A reference to a ruleset that is to be included
    in a topic class.</entry></row>
<row><entry>Content model:</entry>
     <entry>EMPTY</entry></row>
<row><entry>Parents:</entry>
     <entry>topic, ruleset</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>ruleref</symbol> element is used to refer to
<symbol>ruleset</symbol> elements in the same schema. The element has
a <symbol>rule</symbol> attribute, which contains the ID of the
<symbol>ruleset</symbol> element being referenced. All the constraints
contained in that <symbol>ruleset</symbol> element are then included
in the set of constraints defined by the <symbol>ruleset</symbol> or
<symbol>topic</symbol> element that contains the
<symbol>ruleref</symbol> element.
</para>

<para>
It is an error for the <symbol>ruleref</symbol> element to refer to an
ID that does not exist in the schema.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>rule</entry>
       <entry>IDREF</entry>
       <entry>#REQUIRED</entry>
       <entry>&#160;</entry>
       <entry>The ID of the ruleset being referred
      to.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>

<section>
<title>The <symbol>superclass</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Refers to the superclass of the topic class being
    defined.</entry></row>
<row><entry>Content model:</entry>
     <entry>EMPTY</entry></row>
<row><entry>Parents:</entry>
     <entry>topic</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>superclass</symbol> element is used to declare that a
class must be a subclass of another. The validator will use this
information to check that the topic representing the class actually is
a subclass of the referred-to superclass. The superclass is identified
by referring to the topic class definition that corresponds to the
superclass topic.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>ref</entry>
       <entry>IDREF</entry>
       <entry>#REQUIRED</entry>
       <entry>&#160;</entry>
       <entry>The ID of the superclass topic class
      definition.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>

<section>
<title>The <symbol>player</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Controls the allowed types of the topic that may play
    a particular role in an association.</entry></row>
<row><entry>Content model:</entry>
     <entry>(topicRef | subjectIndicatorRef | internalTopicRef | any)? </entry></row>
<row><entry>Parents:</entry>
     <entry>role</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
Used inside <symbol>role</symbol> elements to specify the allowed
classes of topics that may play a given role in an association.  Its
semantics are otherwise the same as those for
<symbol>instanceOf</symbol>. 
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>subclasses</entry>
       <entry>yes, no</entry>
       <entry>#DEFAULT</entry>
       <entry>yes</entry>
       <entry>Whether subclasses of the specified types are
      accepted or not.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>instanceOf</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Specifies the type of a topic map
    object.</entry></row>
<row><entry>Content model:</entry>
     <entry>(topicRef | subjectIndicatorRef | internalTopicRef | any)? </entry></row>
<row><entry>Parents:</entry>
     <entry>topic, role, occurrence, in, scope, playing, association</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>instanceOf</symbol> element is used to match topic map
objects by their type. The contents of the element specify what topic
is allowed as the type of the objects to be matched. If the element is
empty it means that the object must have no type in order to match.
</para>

<para>
The <symbol>subclasses</symbol> attribute is used to control whether
instances of subclasses should match or not. If it is set to
<symbol>yes</symbol> they do match, and if set to <symbol>no</symbol>
they do not. The default is that subclasses do match.
</para>

<para>
The <symbol>topicRef</symbol>, <symbol>subjectIndicatorRef</symbol>,
<symbol>internalTopicRef</symbol>, and <symbol>any</symbol> child
elements are used to specify the type of the topic map object.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>subclasses</entry>
       <entry>yes, no</entry>
       <entry>#DEFAULT</entry>
       <entry>yes</entry>
       <entry>Whether instances of subclasses are
      accepted.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>


<section>
<title>The <symbol>scope</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Controls the allowed scope of a topic characteristic.
    </entry></row>
<row><entry>Content model:</entry>
     <entry>(topicRef | subjectIndicatorRef | internalTopicRef | any | instanceOf)* </entry></row>
<row><entry>Parents:</entry>
     <entry>baseName, variant, occurrence, association</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>scope</symbol> element is used to constrain (or match) the
scopes of topic map objects. The contents of the element specify what
topics are allowed as themes in the scope. If the element is empty it
means that the object must be in the unconstrained scope to match.
</para>

<para>
The <symbol>match</symbol> attribute is used to specify how the scope
of the topic map object is matched against that specified in this
element. If set to <symbol>exact</symbol> every topic mentioned in the
<symbol>scope</symbol> element must be present, and no topics that are
not specified are allowed. If set to <symbol>superset</symbol> some or
all of the topics specified may be left out, but no extra topics are
allowed. If set to <symbol>subset</symbol> no topics may be left out,
but the ones specified must at least be present.
</para>

<para>
The <symbol>topicRef</symbol>, <symbol>subjectIndicatorRef</symbol>,
<symbol>internalTopicRef</symbol>, and <symbol>any</symbol> child
elements are used to specify the themes that may appear in the scope.
The <symbol>instanceOf</symbol> element is also allowed as a child of
the <symbol>scope</symbol> element, and if present it states that all
topics that match the <symbol>instanceOf</symbol> element are allowed
as themes in the scope.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>match</entry>
       <entry>subset, superset, exact</entry>
       <entry>#DEFAULT</entry>
       <entry>exact</entry>
       <entry>Controls how the specified scope is matched
      against the scope of actual topic characteristics.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>

<section>
<title>The <symbol>topicRef</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Identifies a topic by its source
    locator.</entry></row>
<row><entry>Content model:</entry>
     <entry>EMPTY</entry></row>
<row><entry>Parents:</entry>
     <entry>instanceOf, player, otherClass, scope</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>topicRef</symbol> element is used to match topics by their
source locators. The <symbol>href</symbol> attribute contains a URI
(resolved relative to that of the current entity), and topics which
have that URI as their source locator will match, while no other
topics will.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>href</entry>
       <entry>CDATA</entry>
       <entry>#REQUIRED</entry>
       <entry>&#160;</entry>
       <entry>The URI that is the source locator of the
      topic.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>

<section>
<title>The <symbol>subjectIndicatorRef</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Identifies a topic by its subject
    identifier.</entry></row>
<row><entry>Content model:</entry>
     <entry>EMPTY</entry></row>
<row><entry>Parents:</entry>
     <entry>instanceOf, player, otherClass, scope</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>subjectIndicatorRef</symbol> element is used to match
topics by their subject identifiers. The <symbol>href</symbol>
attribute contains a URI (resolved relative to that of the current
entity), and topics which have that URI as their subject identifier
will match, while no other topics will.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>href</entry>
       <entry>CDATA</entry>
       <entry>#REQUIRED</entry>
       <entry>&#160;</entry>
       <entry>The URI that is the subject
      identifier.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>

<section>
<title>The <symbol>internalTopicRef</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Identifies a topic by its source
    locator.</entry></row>
<row><entry>Content model:</entry>
     <entry>EMPTY</entry></row>
<row><entry>Parents:</entry>
     <entry>instanceOf, player, otherClass, scope</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>internalTopicRef</symbol> element is used to match topics
by their source locators. The <symbol>href</symbol> attribute contains
a URI (resolved relative to the base address of the topic map), and
topics which have that URI as their source locator will match, while
no other topics will.
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>href</entry>
       <entry>CDATA</entry>
       <entry>#REQUIRED</entry>
       <entry>&#160;</entry>
       <entry>The URI that is the source locator of the
      topic.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>

<section>
<title>The <symbol>any</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Any topic.</entry></row>
<row><entry>Content model:</entry>
     <entry>EMPTY</entry></row>
<row><entry>Parents:</entry>
     <entry>instanceOf, player, otherClass, scope</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
The <symbol>any</symbol> element matches any topic and is used as a
wildcard in matching.
</para>

<para>The <symbol>any</symbol> element has no attributes.</para>

</section>

<section>
<title>The <symbol>player</symbol> element</title>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="2">
<tbody>
<row><entry>Summary:</entry>
     <entry>Controls the allowed types of the topic that may play
    a particular role in an association.</entry></row>
<row><entry>Content model:</entry>
     <entry>(topicRef | subjectIndicatorRef | internalTopicRef | any)? </entry></row>
<row><entry>Parents:</entry>
     <entry>role</entry></row>
</tbody>
</tgroup>
</informaltable>



<para>
Used inside <symbol>role</symbol> elements to specify the allowed
classes of topics that may play a given role in an association.  Its
semantics are otherwise the same as those for
<symbol>instanceOf</symbol>. 
</para>



<!-- Generated by dtddoc -->
<informaltable>
<tgroup cols="5">
<thead>
<row><entry>Name</entry>
     <entry>Type</entry>
     <entry>Required</entry>
     <entry>Default</entry>
     <entry>Definition</entry></row>
</thead>
<tbody>
  <row><entry>subclasses</entry>
       <entry>yes, no</entry>
       <entry>#DEFAULT</entry>
       <entry>yes</entry>
       <entry>Whether subclasses of the specified types are
      accepted or not.</entry></row>

</tbody>
</tgroup>
</informaltable>


</section>
</section>
</article>
