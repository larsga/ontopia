<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1//EN" '' -->
<!-- "/usr/share/sgml/docbook/dtd/xml/4.1/docbookx.dtd" -->
<article> 
  <title>The Web Editor Tag Libraries</title>
  <subtitle>Reference Documentation</subtitle>

  <articleinfo>
    <author>
      <affiliation><orgname>Ontopia</orgname></affiliation>
    </author>
    <pubdate>2010-06-09</pubdate>
    <releaseinfo>5.1</releaseinfo>
    
  </articleinfo>
  
  <section> 
    <title>Introduction</title> 
    <para>
      This tag library is used to produce HTML forms from topic map
      data and to map the information entered into those forms back
      into actions that cause the topic map to be modified. The tags
      fall into three categories: for producing the form, for
      producing form components, and helper tags for added
      flexibility.
    </para>
    <para>
      These tags must always be contained in a
      <symbol>tolog:context</symbol> tag
      <footnote><para>If you are using the old Navigator tag libraries
      you can also use the old <symbol>logic:context</symbol> tag.</para>
      </footnote>, while the form component
      tags must always be contained in a <symbol>webed:form</symbol>
      tag, and the helper tags must always be contained in one of the
      form component tags.
    </para>
    <para>
      The tag library is designed as an extension of the Navigator
      Framework tag libraries, and uses the same variable concept.
      Many of the attributes in this tag library contain variable
      names which resolve to Navigator Framework variables.
    </para>
    <para>
      In addition, some of the attribute values refer to the action
      configuration file, which is typically located under
      <filename>${WEB_APP}/WEB-INF/config/actions.xml</filename>. This
      file contains action definitions clumped together in action
      groups. HTML forms and action groups usually correspond one-to-one.
    </para>
  </section>
  
  <section> 
    <title>The form tags</title>
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <refentry>
      <refnamediv>
        <refname>form</refname>
        <refpurpose>
          Generates a form element (according to the form template)
          which acts as a container for input fields, selection lists
          and control buttons. The form is mapped to an action group
          which handles the form data when the form is submitted.
        </refpurpose>
      </refnamediv>
      <refsect1>
        <title>Attributes</title>
        <informaltable>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Required</entry>
                <entry>Value</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>actiongroup</entry>
                <entry>Yes</entry>
                <entry>Group name</entry>
                <entry>
                  Sets the name of the action group as specified in the
                  action configuration file.</entry>
              </row>
              <row>
                <entry>actionURI</entry>
                <entry>No</entry>
                <entry>URI</entry>
                <entry>
                  If a (relative or absolute) action URI is specified
                  this overwrites the default action of the form
                  (which is the process servlet<footnote>
                  <para>The fully qualified class name is <classname>
                  net.ontopia.topicmaps.webed.servlets.ProcessServlet
                  </classname></para></footnote>). In most cases it is
                  not necessary to specify something for this
                  value.</entry>
              </row>
              <row>
                <entry>target</entry>
                <entry>No</entry>
                <entry>Frame target name</entry>
                <entry>
                  If target is given it overwrites the default frame
                  target setting deduced from the action configuration
                  file.</entry>
              </row>
              <row>
                <entry>lock</entry>
                <entry>No</entry>
                <entry>Variable name or JSP attribute</entry>
                <entry>
                  Name of the navigator variable containing the
                  objects to lock. If one of the objects cannot be
                  locked the request will be forwarded to a special
                  page (as specified in the action configuration
                  file). If no such page is specified,
                  the form becomes readonly (for details, 
                  see the readonly attribute).
                </entry>
              </row>
              <row>
                <entry>id</entry>
                <entry>No</entry>
                <entry>Unique ID</entry>
                <entry>
                  Specifies a unique id for the tag that will be
                  used as the value of an ID attribute in the generated
                  output. This id value can later be used to look up the
                  content generated by the tag.
                </entry>
              </row>
              <row>
                <entry>readonly</entry>
                <entry>No</entry>
                <entry>
                  Variable or <literal>"false"</literal>
                </entry>
                <entry>
                  <para>
                  If a form is readonly (as opposed to read/write),
                  then by default, all subelements of the form become
                  readonly, which means they cannot be edited, nor
                  modify the topic map.
                  </para>

                  <para>
                  A form becomes readonly, either by setting the
                  <symbol>readonly</symbol> attribute to true or if
                  one of the lock variables (please refer to the
                  <symbol>lock</symbol> attribute) cannot be locked.
                  </para>

                  <para>
                  Note that <literal>"false"</literal> overrides the
                  setting on the form, making the subelement not
                  readonly, even if the form is readonly. If the form
                  is not readonly, then the value of the readonly
                  attribute of each subelement determines whether the
                  element should be readonly (if true) or read/write
                  (if false). The attribute evaluates to false if the
                  variable referenced is empty/undefined, or if the
                  literal string <literal>"false"</literal> is given.
                  </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </refsect1>
    </refentry>
      

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <refentry>
      <refnamediv>
        <refname>field</refname>
        <refpurpose>
          Generate a text input field element (according to the field
          template) that can be used to edit text strings. This may be
          one-line or multiline.
        </refpurpose>
      </refnamediv>
      <refsect1>
        <title>Attributes</title>
        <informaltable>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Required</entry>
                <entry>Value</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>action</entry>
                <entry>Yes</entry>
                <entry>Action name</entry>
                <entry>
                  Sets the name of the action which should be executed
                  to reflect the changed value of the field when the
                  form is submitted.
                </entry>
              </row>
              <row>
                <entry>type</entry>
                <entry>Yes</entry>
                <entry>Field type name</entry>
                <entry>
                  Retrieves information about the field type (whether
                  it should be a single or multiline input field and
                  the concrete dimension) by the given name from the
                  action configuration file (see element
                  <symbol>fieldMap</symbol>).
                </entry>
              </row>
              <row>
                <entry>params</entry>
                <entry>No</entry>
                <entry>Variable name(s) or qname(s) or JSP attributes</entry>
                <entry>
                  Values which should be made available to the action
                  handling the field. The names are separated by
                  whitespace. Note that the order of the parameters
                  matters and is specific to the related action. See
                  the action library reference for the parameters used
                  by the different actions.
                </entry>
              </row>
              <row>
                <entry>id</entry>
                <entry>No</entry>
                <entry>Unique ID</entry>
                <entry>Specifies a unique id for the tag that will be
                used as the value of an ID attribute in the generated
                output. This id value can later be used to look up the
                content generated by the tag.</entry>
              </row>
              <row>
                <entry>trim</entry>
                <entry>No</entry>
                <entry>Variable name, JSP attribute, or (true | false)</entry>
                <entry>Leading and trailing whitespace will be removed from the
                contents of the tag if true, otherwise they will be left in.
                The default is true.</entry>
              </row>
              <row>
                <entry>pattern</entry>
                <entry>No</entry>
                <entry>Variable or JSP attribute</entry>
                <entry>If given, the string value entered in the text
                field must be match the regular expression. This will
                be validated both using JavaScript in the HTML page
                and on receipt of the submitted form on the
                server.</entry><!-- multiple patterns possible somehow -->
              </row>
              <row>
                <entry>readonly</entry>
                <entry>No</entry>
                <entry>Variable or <literal>"false"</literal></entry>
                <entry>
                  <para>
                    If the field is readonly, then it cannot submit
                    any changes to the topic map and the field will
                    not be editable. Instead the text contents of the
                    field will be displayed as plain text.
                  </para>
                  <para>
                    Whether the field is readonly depends on the
                    <symbol>readonly</symbol> attribute of the field
                    and the readonly state of the form.  For details,
                    please read about the <symbol>readonly</symbol>
                    attribute of the <symbol>form</symbol> tag.
                  </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </refsect1>
    </refentry>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <refentry>
      <refnamediv>
        <refname>button</refname>
        <refpurpose>
          Renders a button control element (according to the button
          template) used to submit the form and trigger an action on
          the server side.
        </refpurpose>
      </refnamediv>
      <refsect1>
        <title>Attributes</title>
        <informaltable>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Required</entry>
                <entry>Value</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>action</entry>
                <entry>Yes</entry>
                <entry>Action name</entry>
                <entry>
                  Sets the name of the action which should be executed
                  when the form is submitted.
                </entry>
              </row>
              <row>
                <entry>params</entry>
                <entry>No</entry>
                <entry>Variable name(s) or qname(s) or JSP attributes</entry>
                <entry>
                  Value which should be made available to the action
                  triggered by the button. The names must be
                  separated by whitespace. Note that the order of the
                  parameters matters and is specific to the action.
                </entry>
              </row>
              <row>
                <entry>image</entry>
                <entry>No</entry>
                <entry>Image type name</entry>
                <entry>
                  If set the button will be shown as an image.  The
                  image name is mapped to the action configuration
                  file. If <symbol>text</symbol> is set, that will
                  become the button title (shown as tooltip by most
                  browsers). One of <symbol>text</symbol> and
                  <symbol>image</symbol> must be specified.
                </entry>
              </row>
              <row>
                <entry>text</entry>
                <entry>No</entry>
                <entry>Text value</entry>
                <entry>
                  If set, and <symbol>image</symbol> is not set, the
                  value given will be the label on the button. One of
                  <symbol>text</symbol> and <symbol>image</symbol>
                  must be specified.
                </entry>
              </row>
              <row>
                <entry>reset</entry>
                <entry>No</entry>
                <entry>Variable name or (true | false)</entry>
                <entry>
                  Whether this button should be a reset button (which
                  resets the form field values to their original
                  values).  The default is "false".
                </entry>
              </row>
              <row>
                <entry>id</entry>
                <entry>No</entry>
                <entry>Unique ID</entry>
                <entry>Specifies a unique id for the tag that will be
                used as the value of an ID attribute in the generated
                output. This id value can later be used to look up the
                content generated by the tag.</entry>
              </row>
              <row>
                <entry>readonly</entry>
                <entry>No</entry>
                <entry>Variable name or <literal>"false"</literal></entry>
                <entry>
                  If the button is readonly, the button will not be
                  displayed at all.  Whether the button is readonly
                  depends on the readonly attribute of the button and
                  the readonly state of the form.  For details, please
                  read about the readonly attribute of the form tag.
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </refsect1>
    </refentry>

    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <refentry>
      <refnamediv>
        <refname>list</refname>
        <refpurpose>
          Generates a selection list representation with the help of
          the list template for choosing one or multiple values. The
          list may be a drop-down list, single-select list,
          multi-select list, radio-button list, or checkbox list.
        </refpurpose>
      </refnamediv>
      <refsect1>
        <title>Attributes</title>
        <informaltable>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Required</entry>
                <entry>Value</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>action</entry>
                <entry>Yes</entry>
                <entry>Action name</entry>
                <entry>
                  The name of the action which should be executed
                  when the form is submitted.
                </entry>
              </row>
              <row>
                <entry>collection</entry>
                <entry>Yes</entry>
                <entry>Variable name or JSP attribute</entry>
                <entry>
                  The candidates for the object's values.
                </entry>
              </row>
              <row>
                <entry>selected</entry>
                <entry>No</entry>
                <entry>Variable name or JSP attribute</entry>
                <entry>
                  The currently set value.
                </entry>
              </row>
              <row>
                <entry>params</entry>
                <entry>No</entry>
                <entry>Variable name(s) or qname(s) or JSP attributes</entry>
                <entry>
                Additional parameters to the action.
                </entry>
              </row>
              <row>
                <entry>type</entry>
                <entry>No</entry>
                <entry>(dropdown | scrolling | multiselect | radio | checkbox)</entry>
                <entry>
                  Sets which type of menu should be used when
                  presenting the selection list. If 'type' is not set,
                  "dropdown" will be the default behaviour.
                </entry>
              </row>
              <row>
                <entry>id</entry>
                <entry>No</entry>
                <entry>Unique ID</entry>
                <entry>Specifies a unique id for the tag that will be
                used as the value of an ID attribute in the generated
                output. This id value can later be used to look up the
                content generated by the tag.</entry>
              </row>
              <row>
                <entry>unspecified</entry>
                <entry>No</entry>
                <entry>String</entry>
                <entry>Specifies what the label of the "no choice"
                element in the list should be. If set to "none" there
                will be no "no choice" element. If <symbol>type</symbol> is
                <symbol>multiselect</symbol> this attribute has no effect.
                </entry>
              </row>
              <row>
                <entry>readonly</entry>
                <entry>No</entry>
                <entry>
                  Variable or <literal>"false"</literal>
                </entry>
                <entry>
                  <para>If the list is readonly, the selected element
                  in the list will be displayed as plain text, and the
                  list will not be editable.
                  </para>

                  <para>
                  Whether the list is readonly depends on the readonly
                  attribute of the actionid and the readonly state of
                  the form.  For details, please read about the
                  readonly attribute of the form tag.
                  </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </refsect1>
    </refentry>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <refentry>
      <refnamediv>
        <refname>actionid</refname>
        <refpurpose>
        Generates as output the ID of an action, and will bind the
        name and any given parameters to that action. Any request with
        this ID as a request parameter will trigger the action with
        the given parameters. Useful in cases where more complex action
        handling is wanted.
        </refpurpose>
      </refnamediv>
      <refsect1>
        <title>Attributes</title>
        <informaltable>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Required</entry>
                <entry>Value</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>action</entry>
                <entry>
                  Yes
                </entry>
                <entry>Action name</entry>
                <entry>
                  The name of the action which should be executed
                  when the form is submitted.
                </entry>
              </row>
              <row>
                <entry>params</entry>
                <entry>No</entry>
                <entry>Variable name(s) or qname(s) or JSP attributes</entry>
                <entry>
                Additional parameters to the action.
                </entry>
              </row>
              <row>
                <entry>value</entry>
                <entry>No</entry>
                <entry>Variable name(s) or JSP attribute</entry>
                <entry>
                The value of the form control; will be received by the
                triggered action. If the attribute is not specified the 
                action will be always be invoked when the form is submitted.
                </entry>
              </row>
              <row>
                <entry>control</entry>
                <entry>No</entry>
                <entry>( list | button )</entry>
                <entry>
                Name of form control that is being rendered. The default is 'button'.
                </entry>
              </row>
              <row>
                <entry>pattern</entry>
                <entry>No</entry>
                <entry>Variable or JSP attribute</entry>
                <entry>If given, the string value entered in the text
                field must be match the regular expression. This will
                be validated both using JavaScript in the HTML page
                and on receipt of the submitted form on the
                server.</entry><!-- multiple patterns possible somehow -->
              </row>
              <row>
                <entry>readonly</entry>
                <entry>No</entry>
                <entry>
                  Variable or <literal>"false"</literal>
                </entry>
                <entry>
                  <para>If the action is readonly it cannot submit any
                  changes to the topic map.</para>
                  
                  <para>Whether the actionid is readonly depends on the
                  readonly attribute of the actionid and the readonly
                  state of the form.  For details, please read about
                  the readonly attribute of the form tag.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </refsect1>
    </refentry>
    

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <refentry>
      <refnamediv>
        <refname>checkbox</refname>
        <refpurpose>
        Renders a check box element, which the user can check or
        uncheck. Changing the state of the check box causes the
        attached action to be triggered.
        </refpurpose>
      </refnamediv>
      <refsect1>
        <title>Attributes</title>
        <informaltable>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Required</entry>
                <entry>Value</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>action</entry>
                <entry>
                  Yes
                </entry>
                <entry>Action name</entry>
                <entry>
                  The name of the action which should be executed
                  when the form is submitted.
                </entry>
              </row>
              <row>
                <entry>params</entry>
                <entry>No</entry>
                <entry>Variable name(s) or qname(s) or JSP attributes</entry>
                <entry>
                Additional parameters to the action.
                </entry>
              </row>
              <row>
                <entry>state</entry>
                <entry>No</entry>
                <entry>Variable name or JSP attribute</entry>
                <entry>
                The state of the check box. If the variable name is
                bound to a value that evaluates as true the box is
                checked, otherwise not. (If the attribute is not given
                the box is not checked.)
                </entry>
              </row>            
              <row>
                <entry>id</entry>
                <entry>No</entry>
                <entry>Unique ID</entry>
                <entry>Specifies a unique id for the tag that will be
                used as the value of an ID attribute in the generated
                output. This id value can later be used to look up the
                content generated by the tag.</entry>
              </row>
              <row>
                <entry>readonly</entry>
                <entry>No</entry>
                <entry>
                  Variable or <literal>"false"</literal>
                </entry>
                <entry>
                  If the checkbox is readonly it is disabled in the
                  page.
                  
                  Whether the checkbox is readonly depends on the readonly
                  attribute of the checkbox and the readonly state of the form.
                  For details, please read about the readonly attribute of
                  the form tag.
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </refsect1>
    </refentry>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <refentry>
      <refnamediv>
        <refname>invoke</refname>
        <refpurpose>
        Generates a hidden form field that will cause the connected
        action to be triggered when the form is submitted. The action
        will always be triggered, except when the
        <symbol>invoke</symbol> tag is a child of a
        <symbol>button</symbol> tag, in which case it will only be
        invoked when the button is pressed.
        </refpurpose>
      </refnamediv>

      <refsect1>
        <title>Attributes</title>
        <informaltable>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>Name</entry>
                <entry>Required</entry>
                <entry>Value</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>action</entry>
                <entry>
                  Yes
                </entry>
                <entry>Action name</entry>
                <entry>
                  The name of the action which should be executed
                  when the form is submitted.
                </entry>
              </row>
              <row>
                <entry>params</entry>
                <entry>No</entry>
                <entry>Variable name(s) or qname(s) or JSP attributes</entry>
                <entry>
                Additional parameters to the action.
                </entry>
              </row>
              <row>
                <entry>value</entry>
                <entry>No</entry>
                <entry>Variable name(s)</entry>
                <entry>
                The value of the form control; will be received by the
                triggered action.
                </entry>
              </row>
              <row>
                <entry>runIfNoChanges</entry>
                <entry>No</entry>
                <entry>JSP attribute or (true | false)</entry>
                <entry>If set to false, the action will not run if no
                other actions run. The default is true.</entry>
              </row>
              <row>
                <entry>readonly</entry>
                <entry>No</entry>
                <entry>
                  Variable or <literal>"false"</literal>
                </entry>
                <entry>
                  If the component is readonly it will be ignored and
                  produce no HTML output at all.
                  Whether the invoke is readonly depends on the readonly
                  attribute of the invoke and the readonly state of the form.
                  For details, please read about the readonly attribute of
                  the form tag.
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </refsect1>
    </refentry>
  </section>

  <section>
    <title>Templates</title>
    <para>
      Some information about the templates used by the form tag
      library. To ease understandability each tag maps to exactly one
      template file (the default name of the template file maps to the
      name of the tag).
    </para>

      <para>
        The templates used by the tag library are Velocity
        <footnote>
          <para>More information about the Jakarta Velocity project can
            be found on the <ulink
              url="http://jakarta.apache.org/velocity/">homepage</ulink></para>
        </footnote>
        based. This means that the syntax used in the template files
        must be compliant with the Velocity Template Language (<ulink
          url="http://jakarta.apache.org/velocity/vtl-reference-guide.html">VTL</ulink>).
      </para>

      <para>
        If a default installation is used, the templates will reside
        in the ontopia.jar file, but it is possible to override this and
        place the templates whereever you like. The following
        summarizes the configuration trail: First lookup in your web
        application descriptor file
        (<filename>${WEB_APP}/WEB-INF/web.xml</filename>) for the
        context parameter <symbol>velocity_properties</symbol>. The
        value of this property tells you where the velocity property
        file is located (default:
        <filename>${WEB_APP}/WEB-INF/config/velocity.properties</filename>).
        Inside the velocity properties file there has to be property
        named <symbol>file.resource.loader.path</symbol>, this
        describes relative to the web application context directory in
        which directory the templates are located.
      </para>
      <para>
        Note also that there is a very close correspondence between the
        use of the tags in pages and the action configuration. This file
        is usually found at
        <filename>${WEB_APP}/WEB-INF/config/actions.xml</filename>,
        but this may vary with the configuration of the framework.
      </para>
      
  </section> 
</article>
